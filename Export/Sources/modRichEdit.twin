Module modRichEdit

Public Const RICHEDIT60_CLASS = "RICHEDIT60W"
Public Const MSFTEDIT_CLASS	= "RICHEDIT50W"
Public Const RICHEDIT_CLASSW = "RichEdit20W"

Public Const EM_CANPASTE  = (WM_USER + 50)
Public Const EM_DISPLAYBAND= (WM_USER + 51)
Public Const EM_EXGETSEL  = (WM_USER + 52)
Public Const EM_EXLIMITTEXT= (WM_USER + 53)
Public Const EM_EXLINEFROMCHAR= (WM_USER + 54)
Public Const EM_EXSETSEL  = (WM_USER + 55)
Public Const EM_FINDTEXT  = (WM_USER + 56)
Public Const EM_FORMATRANGE= (WM_USER + 57)
Public Const EM_GETCHARFORMAT= (WM_USER + 58)
Public Const EM_GETEVENTMASK  = (WM_USER + 59)
Public Const EM_GETOLEINTERFACE= (WM_USER + 60)
Public Const EM_GETPARAFORMAT= (WM_USER + 61)
Public Const EM_GETSELTEXT= (WM_USER + 62)
Public Const EM_HIDESELECTION= (WM_USER + 63)
Public Const EM_PASTESPECIAL  = (WM_USER + 64)
Public Const EM_REQUESTRESIZE= (WM_USER + 65)
Public Const EM_SELECTIONTYPE= (WM_USER + 66)
Public Const EM_SETBKGNDCOLOR= (WM_USER + 67)
Public Const EM_SETCHARFORMAT= (WM_USER + 68)
Public Const EM_SETEVENTMASK  = (WM_USER + 69)
Public Const EM_SETOLECALLBACK= (WM_USER + 70)
Public Const EM_SETPARAFORMAT= (WM_USER + 71)
Public Const EM_SETTARGETDEVICE= (WM_USER + 72)
Public Const EM_STREAMIN  = (WM_USER + 73)
Public Const EM_STREAMOUT= (WM_USER + 74)
Public Const EM_GETTEXTRANGE  = (WM_USER + 75)
Public Const EM_FINDWORDBREAK= (WM_USER + 76)
Public Const EM_SETOPTIONS= (WM_USER + 77)
Public Const EM_GETOPTIONS= (WM_USER + 78)
Public Const EM_FINDTEXTEX= (WM_USER + 79)
Public Const EM_GETWORDBREAKPROCEX= (WM_USER + 80)
Public Const EM_SETWORDBREAKPROCEX= (WM_USER + 81)
'  RichEdit 2.0 messages
Public Const EM_SETUNDOLIMIT  = (WM_USER + 82)
Public Const EM_REDO  = (WM_USER + 84)
Public Const EM_CANREDO= (WM_USER + 85)
Public Const EM_GETUNDONAME= (WM_USER + 86)
Public Const EM_GETREDONAME= (WM_USER + 87)
Public Const EM_STOPGROUPTYPING= (WM_USER + 88)
Public Const EM_SETTEXTMODE= (WM_USER + 89)
Public Const EM_GETTEXTMODE= (WM_USER + 90)
Public Const EM_AUTOURLDETECT= (WM_USER + 91)
Public Const EM_GETAUTOURLDETECT  = (WM_USER + 92)
Public Const EM_SETPALETTE= (WM_USER + 93)
Public Const EM_GETTEXTEX= (WM_USER + 94)
Public Const EM_GETTEXTLENGTHEX= (WM_USER + 95)
Public Const EM_SHOWSCROLLBAR= (WM_USER + 96)
Public Const EM_SETTEXTEX= (WM_USER + 97)
'  East Asia specific messages
Public Const EM_SETPUNCTUATION= (WM_USER + 100)
Public Const EM_GETPUNCTUATION= (WM_USER + 101)
Public Const EM_SETWORDWRAPMODE= (WM_USER + 102)
Public Const EM_GETWORDWRAPMODE= (WM_USER + 103)
Public Const EM_SETIMECOLOR= (WM_USER + 104)
Public Const EM_GETIMECOLOR= (WM_USER + 105)
Public Const EM_SETIMEOPTIONS= (WM_USER + 106)
Public Const EM_GETIMEOPTIONS= (WM_USER + 107)
Public Const EM_CONVPOSITION  = (WM_USER + 108)
Public Const EM_SETLANGOPTIONS= (WM_USER + 120)
Public Const EM_GETLANGOPTIONS= (WM_USER + 121)
Public Const EM_GETIMECOMPMODE= (WM_USER + 122)
Public Const EM_FINDTEXTW= (WM_USER + 123)
Public Const EM_FINDTEXTEXW= (WM_USER + 124)
'  RE3.0 FE messages
Public Const EM_RECONVERSION  = (WM_USER + 125)
Public Const EM_SETIMEMODEBIAS= (WM_USER + 126)
Public Const EM_GETIMEMODEBIAS= (WM_USER + 127)
'  BiDi specific messages
Public Const EM_SETBIDIOPTIONS= (WM_USER + 200)
Public Const EM_GETBIDIOPTIONS= (WM_USER + 201)
Public Const EM_SETTYPOGRAPHYOPTIONS  = (WM_USER + 202)
Public Const EM_GETTYPOGRAPHYOPTIONS  = (WM_USER + 203)
'  Extended edit style specific messages
Public Const EM_SETEDITSTYLE  = (WM_USER + 204)
Public Const EM_GETEDITSTYLE  = (WM_USER + 205)
Public Const EM_OUTLINE= (WM_USER + 220)
'  Message for getting and restoring scroll pos
Public Const EM_GETSCROLLPOS  = (WM_USER + 221)
Public Const EM_SETSCROLLPOS  = (WM_USER + 222)
'  Change fontsize in current selection by wParam
Public Const EM_SETFONTSIZE= (WM_USER + 223)
Public Const EM_GETZOOM= (WM_USER + 224)
Public Const EM_SETZOOM= (WM_USER + 225)
Public Const EM_GETVIEWKIND= (WM_USER + 226)
Public Const EM_SETVIEWKIND= (WM_USER + 227)
'  RichEdit 4.0 messages
Public Const EM_GETPAGE= (WM_USER + 228)
Public Const EM_SETPAGE= (WM_USER + 229)
Public Const EM_GETHYPHENATEINFO  = (WM_USER + 230)
Public Const EM_SETHYPHENATEINFO  = (WM_USER + 231)
Public Const EM_GETPAGEROTATE= (WM_USER + 235)
Public Const EM_SETPAGEROTATE= (WM_USER + 236)
Public Const EM_GETCTFMODEBIAS= (WM_USER + 237)
Public Const EM_SETCTFMODEBIAS= (WM_USER + 238)
Public Const EM_GETCTFOPENSTATUS  = (WM_USER + 240)
Public Const EM_SETCTFOPENSTATUS  = (WM_USER + 241)
Public Const EM_GETIMECOMPTEXT= (WM_USER + 242)
Public Const EM_ISIME= (WM_USER + 243)
Public Const EM_GETIMEPROPERTY= (WM_USER + 244)
'  These messages control what rich edit does when it comes accross
'  OLE objects during RTF stream in.  Normally rich edit queries the client
'  application only after OleLoad has been called.  With these messages it is possible to
'  set the rich edit control to a mode where it will query the client application before
'  OleLoad is called
Public Const EM_GETQUERYRTFOBJ= (WM_USER + 269)
Public Const EM_SETQUERYRTFOBJ= (WM_USER + 270)
Public Const EM_INSERTTABLE= (WM_USER + 232)
Public Const EM_GETAUTOCORRECTPROC= (WM_USER + 233)
Public Const EM_SETAUTOCORRECTPROC= (WM_USER + 234)
Public Const EM_CALLAUTOCORRECTPROC= (WM_USER + 255)
Public Const EM_GETTABLEPARMS= (WM_USER + 265)
Public Const EM_SETEDITSTYLEEX= (WM_USER + 275)
Public Const EM_GETEDITSTYLEEX= (WM_USER + 276)
Public Const EM_GETSTORYTYPE= (WM_USER + 290)
Public Const EM_SETSTORYTYPE= (WM_USER + 291)
Public Const EM_GETELLIPSISMODE= (WM_USER + 305)
Public Const EM_SETELLIPSISMODE= (WM_USER + 306)
Public Const EM_SETTABLEPARMS= (WM_USER + 307)
Public Const EM_GETTOUCHOPTIONS= (WM_USER + 310)
Public Const EM_SETTOUCHOPTIONS= (WM_USER + 311)
Public Const EM_INSERTIMAGE  = (WM_USER + 314)
Public Const EM_SETUIANAME= (WM_USER + 320)
Public Const EM_GETELLIPSISSTATE= (WM_USER + 322)

Public Const EN_MSGFILTER  = &H0700
Public Const EN_REQUESTRESIZE  = &H0701
Public Const EN_SELCHANGE  = &H0702
Public Const EN_DROPFILES  = &H0703
Public Const EN_PROTECTED  = &H0704
Public Const EN_CORRECTTEXT  = &H0705  ' PenWin specific
Public Const EN_STOPNOUNDO  = &H0706
Public Const EN_IMECHANGE  = &H0707  ' East Asia specific
Public Const EN_SAVECLIPBOARD  = &H0708
Public Const EN_OLEOPFAILED  = &H0709
Public Const EN_OBJECTPOSITIONS  = &H070a
Public Const EN_LINK  = &H070b
Public Const EN_DRAGDROPDONE  = &H070c
Public Const EN_PARAGRAPHEXPANDED  = &H070d
Public Const EN_PAGECHANGE  = &H070e
Public Const EN_LOWFIRTF  = &H070f
Public Const EN_ALIGNLTR  = &H0710  ' BiDi specific notification
Public Const EN_ALIGNRTL  = &H0711  ' BiDi specific notification
'(_RICHEDIT_VER  = >= &H0800)
Public Const EN_CLIPFORMAT  = &H0712
Public Const EN_STARTCOMPOSITION  = &H0713
Public Const EN_ENDCOMPOSITION  = &H0714



Public Enum TextMode
	TM_PLAINTEXT = 1
	TM_RICHTEXT = 2 ' Default behavior
	TM_SINGLELEVELUNDO = 4
	TM_MULTILEVELUNDO = 8 ' Default behavior
	TM_SINGLECODEPAGE = 16
	TM_MULTICODEPAGE = 32 ' Default behavior
End Enum

Public Enum AutoURL_Flags
    AURL_ENABLEURL =	1
    AURL_ENABLEEMAILADDR	= 2
    AURL_ENABLETELNO	= 4
    AURL_ENABLEEAURLS	= 8
    AURL_ENABLEDRIVELETTERS =	16
    AURL_DISABLEMIXEDLGC	= 32	'/ / Disable mixed Latin Greek Cyrillic IDNs
End Enum

Public Enum RichEd_ExtendedEditStyles
     SES_EMULATESYSEDIT	= 1
     SES_BEEPONMAXTEXT	= 2
     SES_EXTENDBACKCOLOR = 4
     SES_MAPCPS	= 8		'/ / Obsolete (never used)
'#if (_RICHEDIT_VER >= = &H0500)
     SES_HYPERLINKTOOLTIPS =	8
'#endif
     SES_EMULATE10	= 16		'// Obsolete (never used)
'#if (_RICHEDIT_VER >= = &H0700)
     SES_DEFAULTLATINLIGA	= 16
'#endif
     SES_USECRLF = 32		'// Obsolete (never used)
'#if (_RICHEDIT_VER >= = &H0700)
     SES_NOFOCUSLINKNOTIFY	= 32
'#endif
     SES_USEAIMM = 64
     SES_NOIME	= 128

     SES_ALLOWBEEPS = 256
     SES_UPPERCASE	= 512
     SES_LOWERCASE	= 1024
     SES_NOINPUTSEQUENCECHK = 2048
     SES_BIDI = 4096
     SES_SCROLLONKILLFOCUS = 8192
     SES_XLTCRCRLFTOCR = 16384
     SES_DRAFTMODE = 32768

     SES_USECTF	= &H00010000
     SES_HIDEGRIDLINES	= &H00020000
     SES_USEATFONT	= &H00040000
     SES_CUSTOMLOOK	= &H00080000
     SES_LBSCROLLNOTIFY	= &H00100000
     SES_CTFALLOWEMBED	= &H00200000
     SES_CTFALLOWSMARTTAG	= &H00400000
     SES_CTFALLOWPROOFING	= &H00800000
'#If (_RICHEDIT_VER >= = &H0500)
     SES_LOGICALCARET	= &H01000000
     SES_WORDDRAGDROP	= &H02000000
     SES_SMARTDRAGDROP	= &H04000000
     SES_MULTISELECT	= &H08000000
     SES_CTFNOLOCK	= &H10000000
     SES_NOEALINEHEIGHTADJUST	= &H20000000
     SES_MAX	= &H20000000
End Enum

Public Enum RichEdit_LanguageOptions
    IMF_AUTOKEYBOARD	= &H0001
    IMF_AUTOFONT	= &H0002
    IMF_IMECANCELCOMPLETE	= &H0004	'// High completes comp string when aborting, low cancels
    IMF_IMEALWAYSSENDNOTIFY = &H0008
    IMF_AUTOFONTSIZEADJUST	= &H0010
    IMF_UIFONTS = &H0020
'#if (_RICHEDIT_VER >= = &H0800)
    IMF_NOIMPLICITLANG	= &H0040
'#endif
    IMF_DUALFONT	= &H0080
'#if (_RICHEDIT_VER >= = &H0800)
    IMF_NOKBDLIDFIXUP	= &H0200
'#endif
    IMF_NORTFFONTSUBSTITUTE = &H0400
'#if (_RICHEDIT_VER >= = &H0800)
    IMF_SPELLCHECKING	= &H0800
    IMF_TKBPREDICTION	= &H1000
'#endif
'#If (_RICHEDIT_VER >= = &H0810)
    IMF_IMEUIINTEGRATION = &H2000
End Enum

Public Enum RichEdit_IMECompModes
    ICM_NOTOPEN = &H0000
    ICM_LEVEL3	= &H0001
    ICM_LEVEL2	= &H0002
    ICM_LEVEL2_5	= &H0003
    ICM_LEVEL2_SUI	= &H0004
    ICM_CTF = &H0005
End Enum

Public Enum RichEdit_TypographyOptions
    TO_ADVANCEDTYPOGRAPHY	= &H0001
    TO_SIMPLELINEBREAK	= &H0002
    TO_DISABLECUSTOMTEXTOUT = &H0004
    TO_ADVANCEDLAYOUT	= &H0008
End Enum

Public Const EPR_0 = 0 ' Text flows left to right and top to bottom
Public Const EPR_27 = 2  ' Text flows top to bottom and right to left
Public Const EPR_180 = 2 ' Text flows right to left and bottom to top
Public Const EPR_90 = 3 ' Text flows bottom to top and left to right
' (_RICHEDIT_VER  = >= &H0800)
Public Const EPR_SE = 5

Public Enum RichEdit_CTFModeBias
    CTFMODEBIAS_DEFAULT = &H0000
    CTFMODEBIAS_FILENAME	= &H0001
    CTFMODEBIAS_NAME	= &H0002
    CTFMODEBIAS_READING = &H0003
    CTFMODEBIAS_DATETIME	= &H0004
    CTFMODEBIAS_CONVERSATION	= &H0005
    CTFMODEBIAS_NUMERIC = &H0006
    CTFMODEBIAS_HIRAGANA	= &H0007
    CTFMODEBIAS_KATAKANA	= &H0008
    CTFMODEBIAS_HANGUL	= &H0009
    CTFMODEBIAS_HALFWIDTHKATAKANA	= &H000A
    CTFMODEBIAS_FULLWIDTHALPHANUMERIC	= &H000B
    CTFMODEBIAS_HALFWIDTHALPHANUMERIC	= &H000C
End Enum

Public Const IMF_SMODE_PLAURALCLAUSE  = &H0001
Public Const IMF_SMODE_NONE = &H0002

Public Enum RichEdit_IMECTFlags
    ICT_RESULTREADSTR = 1
End Enum
Public Type IMECOMPTEXT
	cb As Long ' count of bytes in the output buffer.
	flags As RichEdit_IMECTFlags ' value specifying the composition string type.
End Type

Public Const EMO_EXIT  = 0  ' Enter normal mode,  lparam ignored
Public Const EMO_ENTER  = 1  ' Enter outline mode, lparam ignored
Public Const EMO_PROMOTE  = 2  ' LOWORD(lparam) == 0 ==>
'     promote  to body-text
'  LOWORD(lparam) != 0 ==>
'     promote/demote current selection
'     by indicated number of levels
Public Const EMO_EXPAND  = 3  ' HIWORD(lparam) = EMO_EXPANDSELECTION
'     -> expands selection to level
'     indicated in LOWORD(lparam)
'     LOWORD(lparam) = -1/+1 corresponds
'     to collapse/expand button presses
'     in winword (other values are
'     equivalent to having pressed these
'     buttons more than once)
'     HIWORD(lparam) = EMO_EXPANDDOCUMENT
'     -> expands whole document to
'     indicated level
Public Const EMO_MOVESELECTION  = 4  ' LOWORD(lparam) != 0 -> move current
'     selection up/down by indicated amount
Public Const EMO_GETVIEWMODE  = 5  ' Returns VM_NORMAL or VM_OUTLINE
'  EMO_EXPAND options
Public Const EMO_EXPANDSELECTION  = 0
Public Const EMO_EXPANDDOCUMENT  = 1
Public Const VM_NORMAL  = 4  ' Agrees with RTF \viewkindN
Public Const VM_OUTLINE  = 2
Public Const VM_PAGE  = 9  ' Screen page view (not print layout)

[ PackingAlignment (4) ]
Public Type TABLEROWPARMS							 ' EM_INSERTTABLE wparam is a (TABLEROWPARMS *)
	cbRow As Byte ' Count of bytes in this structure
	cbCell As Byte ' Count of bytes in TABLECELLPARMS
	cCell As Byte ' Count of cells
	cRow As Byte ' Count of rows
	dxCellMargin As Long ' Cell left/right margin (\trgaph)
	dxIndent As Long ' Row left (right if fRTL indent (similar to \trleft)
	dyHeight As Long ' Row height (\trrh)
    fBitfield As Long
	' nAlignment:3 As Long ' Row alignment (like PARAFORMAT::bAlignment, \trql, trqr, \trqc)
	' fRTL:1 As Long ' Display cells in RTL order (\rtlrow)
	' fKeep:1 As Long ' Keep row together (\trkeep}
	' fKeepFollow:1 As Long ' Keep row on same page as following row (\trkeepfollow)
	' fWrap:1 As Long ' Wrap text to right/left (depending on bAlignment)
	' ' (see \tdfrmtxtLeftN, \tdfrmtxtRightN)
	' fIdentCells:1 As Long ' lparam points at single struct valid for all cells
	cpStartRow As Long ' cp where to insert table (-1 for selection cp)
	'    (can be used for either TRD by EM_GETTABLEPARMS)
	bTableLevel As Byte ' Table nesting level (EM_GETTABLEPARMS only)
	iCell As Byte ' Index of cell to insert/delete (EM_SETTABLEPARMS only)
End Type

[ PackingAlignment (4) ]
Public Type TABLECELLPARMS							 ' EM_INSERTTABLE lparam is a (TABLECELLPARMS *)
	dxWidth As Long ' Cell width (\cellx)
    fBitfield As Integer
	' nVertAlign:2 As Long ' Vertical alignment (0/1/2 = top/center/bottom
	' '    \clvertalt (def), \clvertalc, \clvertalb)
	' fMergeTop:1 As Long ' Top cell for vertical merge (\clvmgf)
	' fMergePrev:1 As Long ' Merge with cell above (\clvmrg)
	' fVertical:1 As Long ' Display text top to bottom, right to left (\cltxtbrlv)
	' fMergeStart:1 As Long ' Start set of horizontally merged cells (\clmgf)
	' fMergeCont:1 As Long ' Merge with previous cell (\clmrg)
	wShading As Integer ' Shading in .01%        (\clshdng) e.g., 10000 flips fore/back
	dxBrdrLeft As Integer ' Left border width    (\clbrdrl\brdrwN) (in twips)
	dyBrdrTop As Integer ' Top border width     (\clbrdrt\brdrwN)
	dxBrdrRight As Integer ' Right border width    (\clbrdrr\brdrwN)
	dyBrdrBottom As Integer ' Bottom border width    (\clbrdrb\brdrwN)
	crBrdrLeft As Long ' Left border color    (\clbrdrl\brdrcf)
	crBrdrTop As Long ' Top border color     (\clbrdrt\brdrcf)
	crBrdrRight As Long ' Right border color    (\clbrdrr\brdrcf)
	crBrdrBottom As Long ' Bottom border color    (\clbrdrb\brdrcf)
	crBackPat As Long ' Background color     (\clcbpat)
	crForePat As Long ' Foreground color     (\clcfpat)
End Type

Public Const ATP_NOCHANGE  = 0
Public Const ATP_CHANGE  = 1
Public Const ATP_NODELIMITER  = 2
Public Const ATP_REPLACEALLTEXT  = 4

Public Enum RichEdit_ExtendedEditStylesEx
	SES_EX_NOTABLE = &H00000004
	SES_EX_NOMATH = &H00000040
	SES_EX_HANDLEFRIENDLYURL = &H00000100
	SES_EX_NOTHEMING = &H00080000
	SES_EX_NOACETATESELECTION = &H00100000
	SES_EX_USESINGLELINE = &H00200000
	SES_EX_MULTITOUCH = &H08000000  ' Only works under Win8+
	SES_EX_HIDETEMPFORMAT = &H10000000
	SES_EX_USEMOUSEWPARAM = &H20000000  ' Use wParam when handling WM_MOUSEMOVE message and do not call GetAsyncKeyState    4
End Enum

Public Const ELLIPSIS_MASK  = &H00000003  ' all meaningful bits
Public Const ELLIPSIS_NONE  = &H00000000  ' ellipsis disabled
Public Const ELLIPSIS_END  = &H00000001  ' ellipsis at the end (forced break)
Public Const ELLIPSIS_WORD  = &H00000003  ' ellipsis at the end (word break)

Public Enum RichEdit_TouchOptions
	RTO_SHOWHANDLES = 1
	RTO_DISABLEHANDLES = 2
	RTO_READINGMODE = 3
End Enum

Public Type RICHEDIT_IMAGE_PARAMETERS
	xWidth As Long ' Units are HIMETRIC
	yHeight As Long ' Units are HIMETRIC
	Ascent As Long ' Units are HIMETRIC
	Type As Long ' Valid values are TA_TOP, TA_BOTTOM and TA_BASELINE
	pwszAlternateText As LongPtr
	pIStream As IStream
End Type

Public Enum RichEdit_EndCompCodes
	ECN_ENDCOMPOSITION = &H0001
	ECN_NEWTEXT = &H0002
End Enum
Public Type ENDCOMPOSITIONNOTIFY
	nmhdr As NMHDR
	dwCode As RichEdit_EndCompCodes
End Type

Public Enum RichEdit_EventNotifiyMasks
	ENM_NONE = &H00000000
	ENM_CHANGE = &H00000001
	ENM_UPDATE = &H00000002
	ENM_SCROLL = &H00000004
	ENM_SCROLLEVENTS = &H00000008
	ENM_DRAGDROPDONE = &H00000010
	ENM_PARAGRAPHEXPANDED = &H00000020
	ENM_PAGECHANGE = &H00000040
	'(_RICHEDIT_VER  = >= &H0800)
	ENM_CLIPFORMAT = &H00000080

	ENM_KEYEVENTS = &H00010000
	ENM_MOUSEEVENTS = &H00020000
	ENM_REQUESTRESIZE = &H00040000
	ENM_SELCHANGE = &H00080000
	ENM_DROPFILES = &H00100000
	ENM_PROTECTED = &H00200000
	ENM_CORRECTTEXT = &H00400000  ' PenWin specific
	ENM_IMECHANGE = &H00800000  ' Used by RE1.0 compatibility
	ENM_LANGCHANGE = &H01000000
	ENM_OBJECTPOSITIONS = &H02000000
	ENM_LINK = &H04000000
	ENM_LOWFIRTF = &H08000000
	'(_RICHEDIT_VER  = >= &H0800)
	ENM_STARTCOMPOSITION = &H10000000
	ENM_ENDCOMPOSITION = &H20000000
	ENM_GROUPTYPINGCHANGE = &H40000000
	ENM_HIDELINKTOOLTIP = &H80000000
End Enum

Public Enum RichEdit_ControlStyles
	ES_SAVESEL = &H00008000&
	ES_SUNKEN = &H00004000
	ES_DISABLENOSCROLL = &H00002000
'  Same as WS_MAXIMIZE, but that doesn't make sense so we re-use the value
	ES_SELECTIONBAR = &H01000000
'  Same as ES_UPPERCASE, but re-used to completely disable OLE drag'n'drop
	ES_NOOLEDRAGDROP = &H00000008
'  Obsolete Edit Style
	ES_EX_NOCALLOLEINIT = &H00000000  ' Not supported in RE 2.0/3.0
'  These flags are used in FE Windows
	ES_VERTICAL = &H00400000  ' Not supported in RE 2.0/3.0
	ES_NOIME = &H00080000
	ES_SELFIME = &H00040000
End Enum

Public Enum RichEdit_ControlOptions
	ECO_AUTOWORDSELECTION = &H00000001
	ECO_AUTOVSCROLL = &H00000040
	ECO_AUTOHSCROLL = &H00000080
	ECO_NOHIDESEL = &H00000100
	ECO_READONLY = &H00000800
	ECO_WANTRETURN = &H00001000
	ECO_SAVESEL = &H00008000&
	ECO_SELECTIONBAR = &H01000000
	ECO_VERTICAL = &H00400000  ' FE specific
End Enum

Public Enum RichEdit_ECO_Ops
	ECOOP_SET = &H0001
	ECOOP_OR = &H0002
	ECOOP_AND = &H0003
	ECOOP_XOR = &H0004
End Enum

Public Enum RichEdit_WordBreakActions
	WB_CLASSIFY = 3
	WB_MOVEWORDLEFT = 4
	WB_MOVEWORDRIGHT = 5
	WB_LEFTBREAK = 6
	WB_RIGHTBREAK = 7
'  East Asia specific flags
	WB_MOVEWORDPREV = 4
	WB_MOVEWORDNEXT = 5
	WB_PREVBREAK = 6
	WB_NEXTBREAK = 7
End Enum

Public Const PC_FOLLOWING  = 1
Public Const PC_LEADING  = 2
Public Const PC_OVERFLOW  = 3
Public Const PC_DELIMITER  = 4
Public Const WBF_WORDWRAP  = &H010
Public Const WBF_WORDBREAK  = &H020
Public Const WBF_OVERFLOW  = &H040
Public Const WBF_LEVEL1  = &H080
Public Const WBF_LEVEL2  = &H100
Public Const WBF_CUSTOM  = &H200
'  East Asia specific flags
Public Const IMF_FORCENONE  = &H0001
Public Const IMF_FORCEENABLE  = &H0002
Public Const IMF_FORCEDISABLE  = &H0004
Public Const IMF_CLOSESTATUSWINDOW  = &H0008
Public Const IMF_VERTICAL  = &H0020
Public Const IMF_FORCEACTIVE  = &H0040
Public Const IMF_FORCEINACTIVE  = &H0080
Public Const IMF_FORCEREMEMBER  = &H0100
Public Const IMF_MULTIPLEEDIT  = &H0400


Public Const WBF_CLASS As Byte = &H0F
Public Const WBF_ISWHITE As Byte = &H10
Public Const WBF_BREAKLINE As Byte = &H20
Public Const WBF_BREAKAFTER As Byte = &H40

Public Enum CFMT_Mask
	CFM_BOLD = &H00000001
	CFM_ITALIC = &H00000002
	CFM_UNDERLINE = &H00000004
	CFM_STRIKEOUT = &H00000008
	CFM_PROTECTED = &H00000010
	CFM_LINK = &H00000020  ' Exchange hyperlink extension
	CFM_SIZE = &H80000000
	CFM_COLOR = &H40000000
	CFM_FACE = &H20000000
	CFM_OFFSET = &H10000000
	CFM_CHARSET = &H08000000
	CFM_SMALLCAPS = &H00000040  ' (*)
	CFM_ALLCAPS = &H00000080  ' Displayed by 3.0
	CFM_HIDDEN = &H00000100  ' Hidden by 3.0
	CFM_OUTLINE = &H00000200  ' (*)
	CFM_SHADOW = &H00000400  ' (*)
	CFM_EMBOSS = &H00000800  ' (*)
	CFM_IMPRINT = &H00001000  ' (*)
	CFM_DISABLED = &H00002000
	CFM_REVISED = &H00004000
	CFM_REVAUTHOR = &H00008000&
	CFE_SUBSCRIPT = &H00010000  ' Superscript and subscript are
	CFE_SUPERSCRIPT = &H00020000  '    mutually exclusive
	CFM_ANIMATION = &H00040000  ' (*)
	CFM_STYLE = &H00080000  ' (*)
	CFM_KERNING = &H00100000
	CFM_SPACING = &H00200000  ' Displayed by 3.0
	CFM_WEIGHT = &H00400000
	CFM_UNDERLINETYPE = &H00800000  ' Many displayed by 3.0
	'(_RICHEDIT_VER  = >= &H0600)
	CFM_COOKIE = &H01000000  ' RE 6.0
	' = #endif
	CFM_LCID = &H02000000
	CFM_BACKCOLOR = &H04000000  ' Higher mask bits defined above
	CFM_SUBSCRIPT = (CFE_SUBSCRIPT Or CFE_SUPERSCRIPT)
	CFM_SUPERSCRIPT = CFM_SUBSCRIPT
	CFM_EFFECTS = (CFM_BOLD Or CFM_ITALIC Or CFM_UNDERLINE Or CFM_COLOR Or CFE_PROTECTED Or CFM_LINK)
	CFM_ALL = (CFM_EFFECTS Or CFM_SIZE Or CFM_FACE Or CFM_OFFSET Or CFM_CHARSET)
	CFM_EFFECTS2 = (CFM_EFFECTS Or CFM_DISABLED Or CFM_SMALLCAPS Or CFM_ALLCAPS Or CFM_OUTLINE Or CFM_SHADOW Or CFM_EMBOSS Or CFM_IMPRINT Or CFM_REVISED Or CFM_SUBSCRIPT Or CFM_SUPERSCRIPT Or CFM_BACKCOLOR)
	'(_RICHEDIT_VER  = >= &H0600)
	CFM_ALL2 = (CFM_ALL Or CFM_EFFECTS2 Or CFM_BACKCOLOR Or CFM_LCID Or	CFM_UNDERLINETYPE Or CFM_WEIGHT Or CFM_REVAUTHOR Or CFM_SPACING Or CFM_KERNING Or CFM_STYLE Or CFM_ANIMATION Or CFM_COOKIE)
End Enum
Public Enum CFMT_Effects
	CFE_BOLD = &H00000001
	CFE_ITALIC = &H00000002
	CFE_UNDERLINE = &H00000004
	CFE_STRIKEOUT = &H00000008
	CFE_PROTECTED = &H00000010
	CFE_LINK = &H00000020
	CFE_AUTOCOLOR = &H40000000
	CFE_SMALLCAPS = CFM_SMALLCAPS
	CFE_ALLCAPS = CFM_ALLCAPS
	CFE_HIDDEN = CFM_HIDDEN
	CFE_OUTLINE = CFM_OUTLINE
	CFE_SHADOW = CFM_SHADOW
	CFE_EMBOSS = CFM_EMBOSS
	CFE_IMPRINT = CFM_IMPRINT
	CFE_DISABLED = CFM_DISABLED
	CFE_REVISED = CFM_REVISED
'  CFE_AUTOCOLOR and CFE_AUTOBACKCOLOR correspond to CFM_COLOR and
'  CFM_BACKCOLOR, respectively, which control them
	CFE_AUTOBACKCOLOR = CFM_BACKCOLOR
	CFM_FONTBOUND = &H00100000
	CFM_LINKPROTECTED = &H00800000  ' Word hyperlink field
	CFM_EXTENDED = &H02000000
	CFM_MATHNOBUILDUP = &H08000000
	CFM_MATH = &H10000000
	CFM_MATHORDINARY = &H20000000
	CFM_ALLEFFECTS = (CFM_EFFECTS2 Or CFM_FONTBOUND Or CFM_EXTENDED Or CFM_MATHNOBUILDUP Or CFM_MATH Or CFM_MATHORDINARY)
	CFE_FONTBOUND = &H00100000  ' Font chosen by binder, not user
	CFE_LINKPROTECTED = &H00800000
	CFE_EXTENDED = &H02000000
	CFE_MATHNOBUILDUP = &H08000000
	CFE_MATH = &H10000000
	CFE_MATHORDINARY = &H20000000
End Enum

[ PackingAlignment (4) ]
Public Type CHARFORMATA
	cbSize As Long
	dwMask As CFMT_Mask
	dwEffects As CFMT_Effects
	yHeight As Long
	yOffset As Long
	crTextColor As Long
	bCharSet As Byte
	bPitchAndFamily As Byte
	szFaceName(0 To (32 - 1)) As Byte
End Type

[ PackingAlignment (4) ]
Public Type CHARFORMATW
	cbSize As Long
	dwMask As CFMT_Mask
	dwEffects As CFMT_Effects
	yHeight As Long
	yOffset As Long
	crTextColor As Long
	bCharSet As Byte
	bPitchAndFamily As Byte
	szFaceName(0 To (32 - 1)) As Integer
End Type


[ PackingAlignment (4) ]
Public Type CHARFORMAT2W
	cbSize As Long
	dwMask As CFMT_Mask
	dwEffects As CFMT_Effects
	yHeight As Long
	yOffset As Long ' > 0 for superscript, < 0 for subscript 
	crTextColor As Long
	bCharSet As Byte
	bPitchAndFamily As Byte
	szFaceName(0 To (32 - 1)) As Integer
	wWeight As Long ' Font weight (LOGFONT value)        
	sSpacing As Integer ' Amount to space between letters    
	crBackColor As Long ' Background color                 
	lcid As Long ' Locale ID                        
	'#if (_RICHEDIT_VER >== &H0500 
	dwCookie As Long ' Client cookie opaque to RichEdit
	sStyle As Integer ' Style handle                     
	wKerning As Long ' Twip size above which to kern char pair
	bUnderlineType As Byte ' Underline type                    
	bAnimation As Byte ' Animated text like marching ants 
	bRevAuthor As Byte ' Revision author index            
	'#if (_RICHEDIT_VER >== &H0800 As 
	bUnderlineColor As Byte ' Underline color -- This would be a padding byte if not RichEd = &H800, so can be left in
End Type

[ PackingAlignment (4) ]
Public Type CHARFORMAT2A
	cbSize As Long
	dwMask As CFMT_Mask
	dwEffects As CFMT_Effects
	yHeight As Long
	yOffset As Long ' > 0 for superscript, < 0 for subscript 
	crTextColor As Long
	bCharSet As Byte
	bPitchAndFamily As Byte
	szFaceName(0 To (32 - 1)) As Byte
	wWeight As Long ' Font weight (LOGFONT value)        
	sSpacing As Integer ' Amount to space between letters    
	crBackColor As Long ' Background color                 
	lcid As Long ' Locale ID                        
	'#if (_RICHEDIT_VER >== &H0500 
	dwCookie As Long ' Client cookie opaque to RichEdit
	sStyle As Integer ' Style handle                     
	wKerning As Long ' Twip size above which to kern char pair
	bUnderlineType As Byte ' Underline type                    
	bAnimation As Byte ' Animated text like marching ants 
	bRevAuthor As Byte ' Revision author index            
	'#if (_RICHEDIT_VER >== &H0800 As 
	bUnderlineColor As Byte ' Underline color -- This would be a padding byte if not RichEd = &H800, so can be left in
End Type

Public Enum RichEdit_UnderlineTypes
	CFU_CF1UNDERLINE = &HFF  ' Map charformat's bit underline to CF2
	CFU_INVERT = &HFE  ' For IME composition fake a selection
	CFU_UNDERLINETHICKLongDASH = 18  ' (*) display as dash
	CFU_UNDERLINETHICKDOTTED = 17  ' (*) display as dot
	CFU_UNDERLINETHICKDASHDOTDOT = 16  ' (*) display as dash dot dot
	CFU_UNDERLINETHICKDASHDOT = 15  ' (*) display as dash dot
	CFU_UNDERLINETHICKDASH = 14  ' (*) display as dash
	CFU_UNDERLINELongDASH = 13  ' (*) display as dash
	CFU_UNDERLINEHEAVYWAVE = 12  ' (*) display as wave
	CFU_UNDERLINEDOUBLEWAVE = 11  ' (*) display as wave
	CFU_UNDERLINEHAIRLINE = 10  ' (*) display as single
	CFU_UNDERLINETHICK = 9
	CFU_UNDERLINEWAVE = 8
	CFU_UNDERLINEDASHDOTDOT = 7
	CFU_UNDERLINEDASHDOT = 6
	CFU_UNDERLINEDASH = 5
	CFU_UNDERLINEDOTTED = 4
	CFU_UNDERLINEDOUBLE = 3  ' (*) display as single
	CFU_UNDERLINEWORD = 2  ' (*) display as single
	CFU_UNDERLINE = 1
	CFU_UNDERLINENONE = 0
End Enum

Public Const yHeightCharPtsMost = 1638

Public Enum RichEdit_CharFmtFlags
	SCF_SELECTION = &H0001
	SCF_WORD = &H0002
	SCF_DEFAULT = &H0000  ' Set default charformat or paraformat
	SCF_ALL = &H0004  ' Not valid with SCF_SELECTION or SCF_WORD
	SCF_USEUIRULES = &H0008  ' Modifier for SCF_SELECTION; says that
'     format came from a toolbar, etc., and
'     hence UI formatting rules should be
'     used instead of literal formatting
	SCF_ASSOCIATEFONT = &H0010  ' Associate fontname with bCharSet (one
'     possible for each of Western, ME, FE,
'     Thai)
	SCF_NOKBUPDATE = &H0020  ' Do not update KB layout for this change
'     even if autokeyboard is on
	SCF_ASSOCIATEFONT2 = &H0040  ' Associate plane-2 (surrogate) font
	'(_RICHEDIT_VER  = >= &H0500)
	SCF_SMARTFONT = &H0080  ' Apply font only if it can handle script (5.0)
	SCF_CHARREPFROMLCID = &H0100  ' Get character repertoire from lcid (5.0)
	SPF_DONTSETDEFAULT = &H0002  ' Suppress setting default on empty control
	SPF_SETDEFAULT = &H0004  ' Set the default paraformat
End Enum

Public Type CHARRANGE
	cpMin As Long
	cpMax As Long
End Type

[ PackingAlignment (4) ]
Public Type TEXTRANGEA
	chrg As CHARRANGE
	lpstrText As String ' Allocated by caller, zero terminated by RichEdit 
End Type
[ PackingAlignment (4) ]
Public Type TEXTRANGEW
	chrg As CHARRANGE
	lpstrText As LongPtr ' Allocated by caller, zero terminated by RichEdit 
End Type

[ PackingAlignment (4) ]
Public Type EDITSTREAM
	dwCookie As LongPtr ' User value passed to callback as first parameter 
	dwError As Long ' Last error 
	pfnCallback As LongPtr
End Type

Public Enum RichEdit_StreamFormats
	SF_TEXT = &H0001
	SF_RTF = &H0002
	SF_RTFNOOBJS = &H0003  ' Write only
	SF_TEXTIZED = &H0004  ' Write only
	SF_UNICODE = &H0010  ' Unicode file (UCS2 little endian)
	SF_USECODEPAGE = &H0020  ' CodePage given by high word
	SF_NCRFORNONASCII = &H40  ' Output \uN for nonASCII
	SFF_WRITEXTRAPAR = &H80  ' Output \par at end
	SFF_SELECTION = &H8000&
'  Flag telling stream operations to ignore some FE control words
'  having to do with FE word breaking and horiz vs vertical text.
'  Not used in RichEdit 2.0 and later
	SFF_PLAINRTF = &H4000
'  Flag telling file stream output (SFF_SELECTION flag not set) to persist
'  \viewscaleN control word.
	SFF_PERSISTVIEWSCALE = &H2000
'  Flag telling file stream input with SFF_SELECTION flag not set not to
'  close the document
	SFF_KEEPDOCINFO = &H1000
'  Flag telling stream operations to output in Pocket Word format
	SFF_PWD = &H0800
'  3-bit field specifying the value of N - 1 to use for \rtfN or \pwdN
	SF_RTFVAL = &H0700
End Enum

[ PackingAlignment (4) ]
Public Type FINDTEXTA
	chrg As CHARRANGE
	lpstrText As String
End Type

[ PackingAlignment (4) ]
Public Type FINDTEXTW
	chrg As CHARRANGE
	lpstrText As LongPtr
End Type

[ PackingAlignment (4) ]
Public Type FINDTEXTEXA
	chrg As CHARRANGE
	lpstrText As String
	chrgText As CHARRANGE
End Type
[ PackingAlignment (4) ]
Public Type FINDTEXTEXW
	chrg As CHARRANGE
	lpstrText As LongPtr
	chrgText As CHARRANGE
End Type

[ PackingAlignment (4) ]
Public Type FORMATRANGE
	hdc As LongPtr
	hdcTarget As LongPtr
	rc As RECT
	rcPage As RECT
	chrg As CHARRANGE
End Type

Public Const MAX_TAB_STOPS  = 32
Public Const lDefaultTab  = 720
Public Const MAX_TABLE_CELLS  = 63

[ PackingAlignment (4) ]
Public Type PARAFORMAT
	cbSize As Long
	dwMask As RichEdit_ParagraphFormatMask
	wNumbering As Integer
	wEffects As Integer
	dxStartIndent As Long
	dxRightIndent As Long
	dxOffset As Long
	wAlignment As Integer
	cTabCount As Integer
	rgxTabs(0 To (MAX_TAB_STOPS - 1)) As Long
End Type
[ PackingAlignment (4) ]
Public Type PARAFORMAT2
	cbSize As Long
	dwMask As RichEdit_ParagraphFormatMask
	wNumbering As Integer
	wEffects As Integer
	dxStartIndent As Long
	dxRightIndent As Long
	dxOffset As Long
	wAlignment As Integer
	cTabCount As Integer
	rgxTabs(0 To (MAX_TAB_STOPS - 1)) As Long
	dySpaceBefore As Long ' Vertical spacing before para         
	dySpaceAfter As Long ' Vertical spacing after para            
	dyLineSpacing As Long ' Line spacing depending on Rule        
	sStyle As Integer ' Style handle                         
	bLineSpacingRule As Byte ' Rule for line spacing (see tom.doc)    
	bOutlineLevel As Byte ' Outline Level                        
	wShadingWeight As Integer ' Shading in hundredths of a per cent    
	wShadingStyle As Integer ' Byte 0: style, nib 2: cfpat, 3: cbpat
	wNumberingStart As Integer ' Starting value for numbering             
	wNumberingStyle As Integer ' Alignment, Roman/Arabic, (), ), ., etc.
	wNumberingTab As Integer ' Space bet 1st indent and 1st-line text
	wBorderSpace As Integer ' Border-text spaces (nbl/bdr in pts)    
	wBorderWidth As Integer ' Pen widths (nbl/bdr in half twips)    
	wBorders As Integer ' Border styles (nibble/border)        
End Type

Public Enum RichEdit_ParagraphFormatMask
	PFM_STARTINDENT = &H00000001
	PFM_RIGHTINDENT = &H00000002
	PFM_OFFSET = &H00000004
	PFM_ALIGNMENT = &H00000008
	PFM_TABSTOPS = &H00000010
	PFM_NUMBERING = &H00000020
	PFM_OFFSETINDENT = &H80000000
'  PARAFORMAT 2.0 masks and effects
	PFM_SPACEBEFORE = &H00000040
	PFM_SPACEAFTER = &H00000080
	PFM_LINESPACING = &H00000100
	PFM_STYLE = &H00000400
	PFM_BORDER = &H00000800  ' (*)
	PFM_SHADING = &H00001000  ' (*)
	PFM_NUMBERINGSTYLE = &H00002000  ' RE 3.0
	PFM_NUMBERINGTAB = &H00004000  ' RE 3.0
	PFM_NUMBERINGSTART = &H00008000&  ' RE 3.0
	PFM_RTLPARA = &H00010000
	PFM_KEEP = &H00020000  ' (*)
	PFM_KEEPNEXT = &H00040000  ' (*)
	PFM_PAGEBREAKBEFORE = &H00080000  ' (*)
	PFM_NOLINENUMBER = &H00100000  ' (*)
	PFM_NOWIDOWCONTROL = &H00200000  ' (*)
	PFM_DONOTHYPHEN = &H00400000  ' (*)
	PFM_SIDEBYSIDE = &H00800000  ' (*)
'  The following two paragraph-format properties are read only
	PFM_COLLAPSED = &H01000000  ' RE 3.0
	PFM_OUTLINELEVEL = &H02000000  ' RE 3.0
	PFM_BOX = &H04000000  ' RE 3.0
	PFM_RESERVED2 = &H08000000  ' RE 4.0
	PFM_TABLEROWDELIMITER = &H10000000  ' RE 4.0
	PFM_TEXTWRAPPINGBREAK = &H20000000  ' RE 3.0
	PFM_TABLE = &H40000000  ' RE 3.0
'  PARAFORMAT "ALL" masks
	PFM_ALL = (PFM_STARTINDENT Or PFM_RIGHTINDENT Or PFM_OFFSET Or PFM_TABSTOPS Or PFM_NUMBERING Or PFM_RTLPARA)
'  Note: PARAFORMAT has no effects (BiDi RichEdit 1.0 does have PFE_RTLPARA)
	PFM_EFFECTS = (PFM_RTLPARA Or PFM_KEEP Or PFM_KEEPNEXT Or PFM_TABLE Or	PFM_PAGEBREAKBEFORE Or PFM_NOLINENUMBER Or	PFM_NOWIDOWCONTROL Or PFM_DONOTHYPHEN Or PFM_SIDEBYSIDE Or	PFM_TABLE Or PFM_TABLEROWDELIMITER)
	PFM_ALL2 = (PFM_ALL Or PFM_EFFECTS Or PFM_SPACEBEFORE Or PFM_SPACEAFTER Or	PFM_LINESPACING Or PFM_STYLE Or PFM_SHADING Or PFM_BORDER Or	PFM_NUMBERINGTAB Or PFM_NUMBERINGSTART Or PFM_NUMBERINGSTYLE)
End Enum

Public Enum RichEdit_ParagraphEffects
	PFE_RTLPARA = (PFM_RTLPARA >> 16)
	PFE_KEEP = (PFM_KEEP >> 16)  ' (*)
	PFE_KEEPNEXT = (PFM_KEEPNEXT >> 16)  ' (*)
	PFE_PAGEBREAKBEFORE = (PFM_PAGEBREAKBEFORE >> 16)  ' (*)
	PFE_NOLINENUMBER = (PFM_NOLINENUMBER >> 16)  ' (*)
	PFE_NOWIDOWCONTROL = (PFM_NOWIDOWCONTROL >> 16)  ' (*)
	PFE_DONOTHYPHEN = (PFM_DONOTHYPHEN >> 16)  ' (*)
	PFE_SIDEBYSIDE = (PFM_SIDEBYSIDE >> 16)  ' (*)
	PFE_TEXTWRAPPINGBREAK = (PFM_TEXTWRAPPINGBREAK >> 16)  ' (*)
'  The following four effects are read only
	PFE_COLLAPSED = (PFM_COLLAPSED >> 16)  ' (+)
	PFE_BOX = (PFM_BOX >> 16)  ' (+)
	PFE_TABLE = (PFM_TABLE >> 16)  ' Inside table row. RE 3.0
	PFE_TABLEROWDELIMITER = (PFM_TABLEROWDELIMITER >> 16)  ' Table row start. RE 4.0
End Enum

Public Enum RichEdit_ParagraphNumOpts
	PFN_ARABIC = 2  ' tomListNumberAsArabic:    0, 1, 2,    ...
	PFN_LCLETTER = 3  ' tomListNumberAsLCLetter: a, b, c,    ...
	PFN_UCLETTER = 4  ' tomListNumberAsUCLetter: A, B, C,    ...
	PFN_LCROMAN = 5  ' tomListNumberAsLCRoman:    i, ii, iii, ...
	PFN_UCROMAN = 6  ' tomListNumberAsUCRoman:    I, II, III, ...
'  PARAFORMAT2 wNumberingStyle options
	PFNS_PAREN = &H000  ' default, e.g.,                  1)
	PFNS_PARENS = &H100  ' tomListParentheses/256, e.g., (1)
	PFNS_PERIOD = &H200  ' tomListPeriod/256, e.g.,       1.
	PFNS_PLAIN = &H300  ' tomListPlain/256, e.g.,          1
	PFNS_NONUMBER = &H400  ' Used for continuation w/o number
	PFNS_NEWNUMBER = &H8000&  ' Start new number with wNumberingStart
'  (can be combined with other PFNS_xxx)
End Enum

Public Enum RichEdit_ParagraphAlign
	PFA_LEFT = 1
	PFA_RIGHT = 2
	PFA_CENTER = 3
'  PARAFORMAT2 alignment options
	PFA_JUSTIFY = 4  ' New paragraph-alignment option 2.0 (*)
	PFA_FULL_INTERWORD = 4  ' These are supported in 3.0 with advanced
End Enum

Public Type REQRESIZE
	nmhdr As NMHDR
	rc As RECT
End Type

[ PackingAlignment (4) ]
Public Type MSGFILTER
	nmhdr As NMHDR
	msg As Long
	wParam As LongPtr
	lParam As LongPtr
End Type

[ PackingAlignment (4) ]
Public Type SELCHANGE
	nmhdr As NMHDR
	chrg As CHARRANGE
	seltyp As Long
End Type

[ PackingAlignment (4) ]
Public Type CLIPBOARDFORMAT
	nmhdr As NMHDR
	cf As Integer
End Type

Public Enum RichEdit_SelFlags
	SEL_EMPTY = &H0000
	SEL_TEXT = &H0001
	SEL_OBJECT = &H0002
	SEL_MULTICHAR = &H0004
	SEL_MULTIOBJECT = &H0008
End Enum

Public Const GCM_RIGHTMOUSEDROP  = &H8000

[ PackingAlignment (4) ]
Public Type GETCONTEXTMENUEX
	chrg As CHARRANGE
	dwFlags As RichEdit_GCMFlags
	pt As POINT
	pvReserved As LongPtr
End Type
Public Enum RichEdit_GCMFlags
	GCMF_GRIPPER = &H00000001
	GCMF_SPELLING = &H00000002  ' pSpellingSuggestions is valid
'  and points to the list of spelling suggestions
	GCMF_TOUCHMENU = &H00004000
	GCMF_MOUSEMENU = &H00002000
End Enum

[ PackingAlignment (4) ]
Public Type ENDROPFILES
	nmhdr As NMHDR
    hDrop As LongPtr
    cp As Long
    fProtected As Long
End Type

[ PackingAlignment (4) ]
Public Type ENPROTECTED
	nmhdr As NMHDR
    msg As Long
    wParam As LongPtr
    lParam As LongPtr
    chrg As CHARRANGE
End Type

[ PackingAlignment (4) ]
Public Type ENSAVECLIPBOARD
	nmhdr As NMHDR
    cObjectCount As Long
    cch As Long
End Type

[ PackingAlignment (4) ]
Public Type ENOLEOPFAILED
	nmhdr As NMHDR
    iob As Long
    lOper As Long
    hr As Long
End Type

Public Const OLEOP_DOVERB = 1

[ PackingAlignment (4) ]
Public Type ENLINK
	nmhdr As NMHDR
    msg As Long
    wParam As LongPtr
    lParam As LongPtr
    chrg As CHARRANGE
End Type

[ PackingAlignment (4) ]
Public Type ENLOWFIRTF
	nmhdr As NMHDR
    szControl As LongPtr
End Type

[ PackingAlignment (4) ]
Public Type ENCORRECTTEXT
	nmhdr As NMHDR
    chrg As CHARRANGE
    seltyp As Integer
End Type

[ PackingAlignment (4) ]
Public Type PUNCUATION
	iSize As Long
    szPuncuation As string
End Type

[ PackingAlignment (4) ]
Public Type COMPCOLOR
	crText As Long
    crBackground As Long
    dwEffects As Long
End Type

Public Const CF_RTF  = "Rich Text Format"
Public Const CF_RTFNOOBJS  = "Rich Text Format Without Objects"
Public Const CF_RETEXTOBJ  = "RichEdit Text and Objects"

[ PackingAlignment (4) ]
Public Type REPASTESPECIAL
	dwAspect As Long
    dwParam As LongPtr
End Type

Public Enum UNDONAMEID
	UID_UNKNOWN = 0
	UID_TYPING = 1
	UID_DELETE = 2
	UID_DRAGDROP = 3
	UID_CUT = 4
	UID_PASTE = 5
	UID_AUTOTABLE = 6
End Enum

Public Enum RichEdit_SetTextFlags
	ST_DEFAULT = 0
	ST_KEEPUNDO = 1
	ST_SELECTION = 2
	ST_NEWCHARS = 4
	ST_UNICODE = 8
End Enum
[ PackingAlignment (4) ]
Public Type SETTEXTEX
	flags As RichEdit_SetTextFlags
    codepage As Long
End Type

Public Enum RichEdit_GetTextFlags
	GT_DEFAULT = 0
	GT_USECRLF = 1
	GT_SELECTION = 2
	GT_RAWTEXT = 4
	GT_NOHIDDENTEXT = 8
End Enum
[ PackingAlignment (4) ]
Public Type GETTEXTEX
    cb As Long
	flags As RichEdit_GetTextFlags
    codepage As Long
    lpDefaultChar As String
    lpUsedDefChar As LongPtr
End Type

Public Enum RichEdit_GetTextLengthExFlags
	GTL_DEFAULT = 0  ' Do default (return # of chars)
	GTL_USECRLF = 1  ' Compute answer using CRLFs for paragraphs
	GTL_PRECISE = 2  ' Compute a precise answer
	GTL_CLOSE = 4  ' Fast computation of a "close" answer
	GTL_NUMCHARS = 8  ' Return number of characters
	GTL_NUMByteS = 16  ' Return number of _bytes_
End Enum
[ PackingAlignment (4) ]
Public Type GETTEXTLENGTHEX
	flags As RichEdit_GetTextLengthExFlags
    codepage As Long
End Type


Public Enum RichEdit_BiDiOptMask
	BOM_DEFPARADIR = &H0001  ' Default paragraph direction (implies alignment) (obsolete)
	BOM_PLAINTEXT = &H0002  ' Use plain text layout (obsolete)
	BOM_NEUTRALOVERRIDE = &H0004  ' Override neutral layout (obsolete)
	BOM_CONTEXTREADING = &H0008  ' Context reading order
	BOM_CONTEXTALIGNMENT = &H0010  ' Context alignment
	BOM_LEGACYBIDICLASS = &H0040  ' Legacy Bidi classification (obsolete)
	'(_RICHEDIT_VER  = >= &H0600)
	BOM_UNICODEBIDI = &H0080  ' Use Unicode BiDi algorithm
End Enum
Public Enum RichEdit_BiDiOptEffects
	BOE_RTLDIR = &H0001  ' Default paragraph direction (implies alignment) (obsolete)
	BOE_PLAINTEXT = &H0002  ' Use plain text layout (obsolete)
	BOE_NEUTRALOVERRIDE = &H0004  ' Override neutral layout (obsolete)
	BOE_CONTEXTREADING = &H0008  ' Context reading order
	BOE_CONTEXTALIGNMENT = &H0010  ' Context alignment
'	(_RICHEDIT_VER  = >= &H0800)
	BOE_FORCERECALC = &H0020  ' Force recalc and redraw
	'#endif
	BOE_LEGACYBIDICLASS = &H0040  ' Legacy Bidi classification (obsolete)
	'(_RICHEDIT_VER  = >= &H0600)
	BOE_UNICODEBIDI = &H0080  ' Use Unicode BiDi algorithm
End Enum
[ PackingAlignment (4) ]
Public Type BIDIOPTIONS
	cbSize As Long
    wMask As Integer
    wEffects As Integer
End Type

Public Enum RichEdit_FindTextFlags
	FR_MATCHDIAC = &H20000000
	FR_MATCHKASHIDA = &H40000000
	FR_MATCHALEFHAMZA = &H80000000
End Enum

Public Const WCH_EMBEDDING As Integer = &HFFFC

Public Enum KHYPH
	khyphNil ' No Hyphenation
	khyphNormal ' Normal Hyphenation
	khyphAddBefore ' Add letter before hyphen
	khyphChangeBefore ' Change letter before hyphen
	khyphDeleteBefore ' Delete letter before hyphen
	khyphChangeAfter ' Change letter after hyphen
	khyphDelAndChange ' Delete letter before hyphen and change
	' letter preceding hyphen
End Enum
[ PackingAlignment (4) ]
Public Type HYPHRESULT
	khyph As KHYPH ' Kind of hyphenation
	ichHyph As long ' Character which was hyphenated
	chHyph As Integer ' Depending on hyphenation type, character added, changed, etc.
End Type
[ PackingAlignment (4) ]
Public Type HYPHENATEINFO
	cbSize As Integer ' Size of HYPHENATEINFO structure
	dxHyphenateZone As Integer ' If a space character is closer to the margin
	'    than this value, don't hyphenate (in TWIPs)
	pfnHyphenate As LongPtr
End Type

Public Const AURL_ENABLEEA  = 1  ' Deprecated: use AURL_ENABLEEAURLS
Public Const GCM_TOUCHMENU  = &H4000  ' Deprecated: Use GCMF_TOUCHMENU
Public Const GCM_MOUSEMENU  = &H2000  ' Deprecated: Use GCMF_MOUSEMENU


End Module