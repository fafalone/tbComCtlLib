

Module modToolbar

Public Const TOOLBARCLASSNAME = "ToolbarWindow32"

Public Const TB_ENABLEBUTTON  = (WM_USER + 1)
Public Const TB_CHECKBUTTON  = (WM_USER + 2)
Public Const TB_PRESSBUTTON  = (WM_USER + 3)
Public Const TB_HIDEBUTTON  = (WM_USER + 4)
Public Const TB_INDETERMINATE  = (WM_USER + 5)
Public Const TB_MARKBUTTON  = (WM_USER + 6)
Public Const TB_ISBUTTONENABLED  = (WM_USER + 9)
Public Const TB_ISBUTTONCHECKED  = (WM_USER + 10)
Public Const TB_ISBUTTONPRESSED  = (WM_USER + 11)
Public Const TB_ISBUTTONHIDDEN  = (WM_USER + 12)
Public Const TB_ISBUTTONINDETERMINATE  = (WM_USER + 13)
Public Const TB_ISBUTTONHIGHLIGHTED  = (WM_USER + 14)
Public Const TB_SETSTATE  = (WM_USER + 17)
Public Const TB_GETSTATE  = (WM_USER + 18)
Public Const TB_ADDBITMAP  = (WM_USER + 19)
Public Const TB_ADDBUTTONSA  = (WM_USER + 20)
Public Const TB_INSERTBUTTONA  = (WM_USER + 21)
Public Const TB_DELETEBUTTON  = (WM_USER + 22)
Public Const TB_GETBUTTON  = (WM_USER + 23)
Public Const TB_BUTTONCOUNT  = (WM_USER + 24)
Public Const TB_COMMANDTOINDEX  = (WM_USER + 25)
Public Const TB_SAVERESTOREA  = (WM_USER + 26)
Public Const TB_SAVERESTOREW  = (WM_USER + 76)
Public Const TB_CUSTOMIZE  = (WM_USER + 27)
Public Const TB_ADDSTRINGA  = (WM_USER + 28)
Public Const TB_ADDSTRINGW  = (WM_USER + 77)
Public Const TB_GETITEMRECT  = (WM_USER + 29)
Public Const TB_BUTTONSTRUCTSIZE  = (WM_USER + 30)
Public Const TB_SETBUTTONSIZE  = (WM_USER + 31)
Public Const TB_SETBITMAPSIZE  = (WM_USER + 32)
Public Const TB_AUTOSIZE  = (WM_USER + 33)
Public Const TB_SETBUTTONTYPE = (WM_USER + 34) 'UNDOCUMENTED
Public Const TB_GETTOOLTIPS  = (WM_USER + 35)
Public Const TB_SETTOOLTIPS  = (WM_USER + 36)
Public Const TB_SETPARENT  = (WM_USER + 37)
Public Const TB_ADDBITMAP32 = (WM_USER + 38) 'UNDOCUMENTED
Public Const TB_SETROWS  = (WM_USER + 39)
Public Const TB_GETROWS  = (WM_USER + 40)
Public Const TB_SETCMDID  = (WM_USER + 42)
Public Const TB_CHANGEBITMAP  = (WM_USER + 43)
Public Const TB_GETBITMAP  = (WM_USER + 44)
Public Const TB_GETBUTTONTEXTA  = (WM_USER + 45)
Public Const TB_GETBUTTONTEXTW  = (WM_USER + 75)
Public Const TB_REPLACEBITMAP  = (WM_USER + 46)
Public Const TB_SETINDENT  = (WM_USER + 47)
Public Const TB_SETIMAGELIST  = (WM_USER + 48)
Public Const TB_GETIMAGELIST  = (WM_USER + 49)
Public Const TB_LOADIMAGES  = (WM_USER + 50)
Public Const TB_GETRECT  = (WM_USER + 51)  ' wParam is the Cmd instead of index
Public Const TB_SETHOTIMAGELIST  = (WM_USER + 52)
Public Const TB_GETHOTIMAGELIST  = (WM_USER + 53)
Public Const TB_SETDISABLEDIMAGELIST  = (WM_USER + 54)
Public Const TB_GETDISABLEDIMAGELIST  = (WM_USER + 55)
Public Const TB_SETSTYLE  = (WM_USER + 56)
Public Const TB_GETSTYLE  = (WM_USER + 57)
Public Const TB_GETBUTTONSIZE  = (WM_USER + 58)
Public Const TB_SETBUTTONWIDTH  = (WM_USER + 59)
Public Const TB_SETMAXTEXTROWS  = (WM_USER + 60)
Public Const TB_GETTEXTROWS  = (WM_USER + 61)
Public Const TB_GETBUTTONTEXT  = TB_GETBUTTONTEXTW
Public Const TB_SAVERESTORE  = TB_SAVERESTOREW
Public Const TB_ADDSTRING  = TB_ADDSTRINGW
Public Const TB_GETOBJECT  = (WM_USER + 62)  ' wParam == IID, lParam void **ppv
Public Const TB_GETHOTITEM  = (WM_USER + 71)
Public Const TB_SETHOTITEM  = (WM_USER + 72)  ' wParam == iHotItem
Public Const TB_SETANCHORHIGHLIGHT  = (WM_USER + 73)  ' wParam == TRUE/FALSE
Public Const TB_GETANCHORHIGHLIGHT  = (WM_USER + 74)
Public Const TB_MAPACCELERATORA  = (WM_USER + 78)  ' wParam == ch, lParam int * pidBtn
Public Const TB_GETINSERTMARK  = (WM_USER + 79)  ' lParam == LPTBINSERTMARK
Public Const TB_SETINSERTMARK  = (WM_USER + 80)  ' lParam == LPTBINSERTMARK
Public Const TB_INSERTMARKHITTEST  = (WM_USER + 81)  ' wParam == LPPOINT lParam == LPTBINSERTMARK
Public Const TB_MOVEBUTTON  = (WM_USER + 82)
Public Const TB_GETMAXSIZE  = (WM_USER + 83)  ' lParam == LPSIZE
Public Const TB_SETEXTENDEDSTYLE  = (WM_USER + 84)  ' For TBSTYLE_EX_*
Public Const TB_GETEXTENDEDSTYLE  = (WM_USER + 85)  ' For TBSTYLE_EX_*
Public Const TB_GETPADDING  = (WM_USER + 86)
Public Const TB_SETPADDING  = (WM_USER + 87)
Public Const TB_SETINSERTMARKCOLOR  = (WM_USER + 88)
Public Const TB_GETINSERTMARKCOLOR  = (WM_USER + 89)
Public Const TB_SETCOLORSCHEME  = CCM_SETCOLORSCHEME  ' lParam is color scheme
Public Const TB_GETCOLORSCHEME  = CCM_GETCOLORSCHEME  ' fills in COLORSCHEME pointed to by lParam
Public Const TB_SETUNICODEFORMAT  = CCM_SETUNICODEFORMAT
Public Const TB_GETUNICODEFORMAT  = CCM_GETUNICODEFORMAT
Public Const TB_MAPACCELERATORW  = (WM_USER + 90)  ' wParam == ch, lParam int * pidBtn
Public Const TB_MAPACCELERATOR  = TB_MAPACCELERATORW
Public Const TB_GETBUTTONINFOW  = (WM_USER + 63)
Public Const TB_SETBUTTONINFOW  = (WM_USER + 64)
Public Const TB_GETBUTTONINFOA  = (WM_USER + 65)
Public Const TB_SETBUTTONINFOA  = (WM_USER + 66)
Public Const TB_GETBUTTONINFO  = TB_GETBUTTONINFOW
Public Const TB_SETBUTTONINFO  = TB_SETBUTTONINFOW
Public Const TB_INSERTBUTTONW  = (WM_USER + 67)
Public Const TB_ADDBUTTONSW  = (WM_USER + 68)
Public Const TB_HITTEST  = (WM_USER + 69)
Public Const TB_INSERTBUTTON  = TB_INSERTBUTTONW
Public Const TB_ADDBUTTONS  = TB_ADDBUTTONSW
Public Const TB_SETDRAWTEXTFLAGS  = (WM_USER + 70)  ' wParam == mask lParam == bit values
Public Const TB_GETSTRINGW  = (WM_USER + 91)
Public Const TB_GETSTRINGA  = (WM_USER + 92)
Public Const TB_GETSTRING  = TB_GETSTRINGW
Public Const TB_SETBOUNDINGSIZE  = (WM_USER + 93)
Public Const TB_SETHOTITEM2  = (WM_USER + 94)  ' wParam == iHotItem,  lParam = dwFlags
Public Const TB_HASACCELERATOR  = (WM_USER + 95)  ' wParam == char, lParam = &iCount
Public Const TB_SETLISTGAP  = (WM_USER + 96)
Public Const TB_GETIMAGELISTCOUNT  = (WM_USER + 98)
Public Const TB_GETIDEALSIZE  = (WM_USER + 99)  ' wParam == fHeight, lParam = psize
'  before using WM_USER + 103, recycle old space above (WM_USER + 97)  'lol Microsoft didn't take their own advice
Public Const TB_TRANSLATEACCELERATOR  = CCM_TRANSLATEACCELERATOR
Public Const TB_GETMETRICS  = (WM_USER + 101)
Public Const TB_SETMETRICS  = (WM_USER + 102)
Public Const TB_GETITEMDROPDOWNRECT  = (WM_USER + 103)  ' Rect of item's drop down button
Public Const TB_SETPRESSEDIMAGELIST  = (WM_USER + 104)
Public Const TB_GETPRESSEDIMAGELIST  = (WM_USER + 105)
Public Const TB_SETWINDOWTHEME  = CCM_SETWINDOWTHEME

Public Const TBN_FIRST As Long = (-700)
Public Const TBN_GETBUTTONINFOA  = (TBN_FIRST - 0)
Public Const TBN_BEGINDRAG  = (TBN_FIRST - 1)
Public Const TBN_ENDDRAG  = (TBN_FIRST - 2)
Public Const TBN_BEGINADJUST  = (TBN_FIRST - 3)
Public Const TBN_ENDADJUST  = (TBN_FIRST - 4)
Public Const TBN_RESET  = (TBN_FIRST - 5)
Public Const TBN_QUERYINSERT  = (TBN_FIRST - 6)
Public Const TBN_QUERYDELETE  = (TBN_FIRST - 7)
Public Const TBN_TOOLBARCHANGE  = (TBN_FIRST - 8)
Public Const TBN_CUSTHELP  = (TBN_FIRST - 9)
Public Const TBN_DROPDOWN  = (TBN_FIRST - 10)
Public Const TBN_CLOSEUP = (TBN_FIRST - 11) 'UNDOCUMENTED
Public Const TBN_GETOBJECT  = (TBN_FIRST - 12)
Public Const TBN_HOTITEMCHANGE  = (TBN_FIRST - 13)
Public Const TBN_DRAGOUT  = (TBN_FIRST - 14)  ' this is sent when the user clicks down on a button then drags off the button
Public Const TBN_DELETINGBUTTON  = (TBN_FIRST - 15)  ' uses TBNOTIFY
Public Const TBN_GETDISPINFOA  = (TBN_FIRST - 16)  ' This is sent when the  toolbar needs  some display information
Public Const TBN_GETDISPINFOW  = (TBN_FIRST - 17)  ' This is sent when the  toolbar needs  some display information
Public Const TBN_GETINFOTIPA  = (TBN_FIRST - 18)
Public Const TBN_GETINFOTIPW  = (TBN_FIRST - 19)
Public Const TBN_GETBUTTONINFOW  = (TBN_FIRST - 20)
Public Const TBN_RESTORE  = (TBN_FIRST - 21)
Public Const TBN_SAVE  = (TBN_FIRST - 22)
Public Const TBN_INITCUSTOMIZE  = (TBN_FIRST - 23)
Public Const TBN_WRAPHOTITEM  = (TBN_FIRST - 24)
Public Const TBN_DUPACCELERATOR  = (TBN_FIRST - 25)
Public Const TBN_WRAPACCELERATOR  = (TBN_FIRST - 26)
Public Const TBN_DRAGOVER  = (TBN_FIRST - 27)
Public Const TBN_MAPACCELERATOR  = (TBN_FIRST - 28)


Public Enum Toolbar_ButtonStates
	TBSTATE_CHECKED = &H01
	TBSTATE_PRESSED = &H02
	TBSTATE_ENABLED = &H04
	TBSTATE_HIDDEN = &H08
	TBSTATE_INDETERMINATE = &H10
	TBSTATE_WRAP = &H20
	TBSTATE_ELLIPSES = &H40
	TBSTATE_MARKED = &H80
End Enum

Public Enum ToolbarStyles
	TBSTYLE_TOOLTIPS = &H0100
	TBSTYLE_WRAPABLE = &H0200
	TBSTYLE_ALTDRAG = &H0400
	TBSTYLE_FLAT = &H0800
	TBSTYLE_LIST = &H1000
	TBSTYLE_CUSTOMERASE = &H2000
	TBSTYLE_REGISTERDROP = &H4000
	TBSTYLE_TRANSPARENT = &H8000
	TBSTYLE_EX_DRAWDDARROWS = &H00000001
	TBSTYLE_EX_MULTICOLUMN = &H00000002 ' conflicts w/ TBSTYLE_WRAPABLE
	TBSTYLE_EX_VERTICAL = &H00000004
	TBSTYLE_EX_MIXEDBUTTONS = &H00000008
	TBSTYLE_EX_HIDECLIPPEDBUTTONS = &H00000010 ' don't show partially obscured buttons
    TBSTYLE_EX_INVERTIBLEIMAGELIST = &H00000020 'UNDOCUMENTED: / / Image list may contain inverted 
    TBSTYLE_EX_FIXEDDROPDOWN = &H00000040 'UNDOCUMENTED: Only used in the taskbar
	TBSTYLE_EX_DOUBLEBUFFER = &H00000080 ' Double Buffer the toolbar
    TBSTYLE_EX_TRANSPARENTDEADAREA = &H00000100 'UNDOCUMENTED
    TBSTYLE_EX_TOOLTIPSEXCLUDETOOLBAR = &H00000200 'UNDOCUMENTED
End Enum

Public Enum ToolbarButtonStyles
	BTNS_BUTTON = &H0000
	BTNS_SEP = &H0001
	BTNS_CHECK = &H0002
	BTNS_GROUP = &H0004
	BTNS_CHECKGROUP = (BTNS_GROUP Or BTNS_CHECK)
	BTNS_DROPDOWN = &H0008
	BTNS_AUTOSIZE = &H0010 ' automatically calculate the cx of the button
	BTNS_NOPREFIX = &H0020 ' this button should not have accel prefix
	BTNS_SHOWTEXT = &H0040 ' ignored unless TBSTYLE_EX_MIXEDBUTTONS is set
	BTNS_WHOLEDROPDOWN = &H0080 ' draw drop-down arrow, but without split arrow section
End Enum

Public Enum ToolbarCustomDrawReturnFlags
	TBCDRF_NOEDGES = &H00010000 ' Don't draw button edges
	TBCDRF_HILITEHOTTRACK = &H00020000 ' Use color of the button bk when hottracked
	TBCDRF_NOOFFSET = &H00040000 ' Don't offset button if pressed
	TBCDRF_NOMARK = &H00080000 ' Don't draw default highlight of image/text for TBSTATE_MARKED
	TBCDRF_NOETCHEDEFFECT = &H00100000 ' Don't draw etched effect for disabled items
	TBCDRF_BLENDICON = &H00200000 ' Use ILD_BLEND50 on the icon image
	TBCDRF_NOBACKGROUND = &H00400000 ' Use ILD_BLEND50 on the icon image
	TBCDRF_USECDCOLORS = &H00800000 ' Use CustomDrawColors to RenderText regardless of VisualStyle
End Enum

Public Enum CreateMappedBitmapFlags
    CMB_DISCARDABLE = &H01 'UNDOCUMENTED
	CMB_MASKED = &H02
    CMB_DIBSECTION = &H04 'UNDOCUMENTED
End Enum

Public Enum Toolbar_InsertMarkFlags
	TBIMHT_AFTER = &H00000001 ' TRUE = insert After iButton, otherwise before
	TBIMHT_BACKGROUND = &H00000002 ' TRUE iff missed buttons completely
End Enum


Public Type TBBUTTON
	iBitmap As Long
    idCommand As Long
    fsState As Byte
    fsStyle As Byte
    #If Win64 Then
    	bReserved(5) As Byte
    #Else
        bReserved(1) As Byte
    #End If
    dwData As LongPtr
    iString As LongPtr
End Type

Public Type COLORMAP
	from As Long
    to As Long
End Type

Public Type NMTBCUSTOMDRAW
	nmcd As NMCUSTOMDRAW
    hbrMonoDither As LongPtr
    hbrLines As LongPtr
    hpenLines As LongPtr
    clrText As Long
    clrMark As Long
    clrTextHighlight As Long
    clrBtnFace As Long
    clrBtnHighlight As Long
    clrHighlightHotTrack As Long
    rcText As RECT
    nStringBkMode As Long
    nHLStringBkMode As Long
    iListGap As Long
End Type

Public Enum Toolbar_AddBitmapValues
	HINST_COMMCTRL = (-1)
	IDB_STD_SMALL_COLOR = 0
	IDB_STD_LARGE_COLOR = 1
	IDB_VIEW_SMALL_COLOR = 4
	IDB_VIEW_LARGE_COLOR = 5
	IDB_HIST_SMALL_COLOR = 8
	IDB_HIST_LARGE_COLOR = 9
	IDB_HIST_NORMAL = 12
	IDB_HIST_HOT = 13
	IDB_HIST_DISABLED = 14
	IDB_HIST_PRESSED = 15
End Enum
Public Enum Toolbar_StandardBitmaps
	STD_CUT = 0
	STD_COPY = 1
	STD_PASTE = 2
	STD_UNDO = 3
	STD_REDOW = 4
	STD_DELETE = 5
	STD_FILENEW = 6
	STD_FILEOPEN = 7
	STD_FILESAVE = 8
	STD_PRINTPRE = 9
	STD_PROPERTIES = 10
	STD_HELP = 11
	STD_FIND = 12
	STD_REPLACE = 13
	STD_PRINT = 14
	VIEW_LARGEICONS = 0
	VIEW_SMALLICONS = 1
	VIEW_LIST = 2
	VIEW_DETAILS = 3
	VIEW_SORTNAME = 4
	VIEW_SORTSIZE = 5
	VIEW_SORTDATE = 6
	VIEW_SORTTYPE = 7
	VIEW_PARENTFOLDER = 8
	VIEW_NETCONNECT = 9
	VIEW_NETDISCONNECT = 10
	VIEW_NEWFOLDER = 11
	VIEW_VIEWMENU = 12
	HIST_BACK = 0
	HIST_FORWARD = 1
	HIST_FAVORITES = 2
	HIST_ADDTOFAVORITES = 3
	HIST_VIEWTREE = 4
End Enum
Public Type TBADDBITMAP
	hInst As LongPtr
	nID As LongPtr
End Type

Public Type TBSAVEPARAMSW
	hkr As LongPtr
	pszSubKey As LongPtr
	pszValueName As LongPtr
End Type
Public Type TBSAVEPARAMSA
	hkr As LongPtr
	pszSubKey As String
	pszValueName As String
End Type

Public Type TBINSERTMARK
	iButton As Long
	dwFlags As Toolbar_InsertMarkFlags
End Type

Public Type TBREPLACEBITMAP
	hInstOld As LongPtr
	nIDOld As LongPtr
	hInstNew As LongPtr
	nIDNew As LongPtr
	nButtons As Long
End Type

Public Const TBBF_LARGE = &H0001

Public Enum Toolbar_ButtonInfoMask
	TBIF_IMAGE = &H00000001
	TBIF_TEXT = &H00000002
	TBIF_STATE = &H00000004
	TBIF_STYLE = &H00000008
	TBIF_LPARAM = &H00000010
	TBIF_COMMAND = &H00000020
	TBIF_SIZE = &H00000040
	TBIF_BYINDEX = &H80000000
End Enum

Public Enum Toolbar_HotItemFlags
	HICF_OTHER = &H00000000
	HICF_MOUSE = &H00000001 ' Triggered by mouse
	HICF_ARROWKEYS = &H00000002 ' Triggered by arrow keys
	HICF_ACCELERATOR = &H00000004 ' Triggered by accelerator
	HICF_DROPDOWN = &H00000008 ' Button dropped down
	HICF_ENTERING = &H00000010 ' idOld is invalid
	HICF_LEAVING = &H00000020 ' idNew is invalid
	HICF_RESELECT = &H00000040 ' hot item reselected
	HICF_LMOUSE = &H00000080 ' left mouse button selected
	HICF_TOGGLEDROPDOWN = &H00000100 ' Toggle button's dropdown state
End Enum

Public Enum TBM_Mask
	TBMF_PAD = &H00000001
	TBMF_BARPAD = &H00000002
	TBMF_BUTTONSPACING = &H00000004
End Enum

Public Type TBMETRICS
	cbSize As Long
	dwMask As TBM_Mask
	cxPad As Long ' PAD
	cyPad As Long
	cxBarPad As Long ' BARPAD
	cyBarPad As Long
	cxButtonSpacing As Long ' BUTTONSPACING
	cyButtonSpacing As Long
End Type

Public Enum ToolbarCustomizeReturnFlags
	TBNRF_HIDEHELP = &H00000001
	TBNRF_ENDCUSTOMIZE = &H00000002
End Enum

Public Enum Toolbar_NotifyFlags
	TBNF_IMAGE = &H00000001
	TBNF_TEXT = &H00000002
	TBNF_DI_SETITEM = &H10000000
End Enum

Public Enum ToolbarDropdownReturnValues
	TBDDRET_DEFAULT = 0
	TBDDRET_NODEFAULT = 1
	TBDDRET_TREATPRESSED = 2 ' Treat as a standard press button
End Enum

Public Type TBBUTTONINFOW
	cbSize As Long
	dwMask As Toolbar_ButtonInfoMask
	idCommand As Long
	iImage As Long
	fsState As BYTE
	fsStyle As BYTE
	cx As Integer
	lParam As LongPtr
	pszText As LongPtr
	cchText As Long
End Type
Public Type TBBUTTONINFOA
	cbSize As Long
	dwMask As Toolbar_ButtonInfoMask
	idCommand As Long
	iImage As Long
	fsState As BYTE
	fsStyle As BYTE
	cx As Integer
	lParam As LongPtr
	pszText As String
	cchText As Long
End Type

Public Type NMTBHOTITEM
	hdr As NMHDR
	idOld As Long
	idNew As Long
	dwFlags As Toolbar_HotItemFlags ' HICF_*
End Type

Public Type NMTBSAVE
	hdr As NMHDR
	pData As LongPtr
	pCurrent As LongPtr
	cbData As Long
	iItem As Long
	cButtons As Long
	tbButton As TBBUTTON
End Type

Public Type NMTBRESTORE
    hdr As NMHDR
	pData As LongPtr
	pCurrent As LongPtr
	cbData As Long
	iItem As Long
	cButtons As Long
	cbBytesPerRecord As Long
	tbButton As TBBUTTON
End Type

Public Type NMTBGETINFOTIPW
	hdr As NMHDR
	pszText As LongPtr
	cchTextMax As Long
	iItem As Long
	lParam As LongPtr
End Type
Public Type NMTBGETINFOTIPA
	hdr As NMHDR
	pszText As String
	cchTextMax As Long
	iItem As Long
	lParam As LongPtr
End Type

Public Type NMTBDISPINFOW
	hdr As NMHDR
	dwMask As Long '[in] Specifies the values requested .[out] Client ask the data to be set for future use
	idCommand As Long ' [in] id of button we're requesting info for
	lParam As LongPtr ' [in] lParam of button
	iImage As Long ' [out] image index
	pszText As LongPtr ' [out] new text for item
	cchText As Long ' [in] size of buffer pointed to by pszText
End Type
Public Type NMTBDISPINFOA
	hdr As NMHDR
	dwMask As Long '[in] Specifies the values requested .[out] Client ask the data to be set for future use
	idCommand As Long ' [in] id of button we're requesting info for
	lParam As LongPtr ' [in] lParam of button
	iImage As Long ' [out] image index
	pszText As String ' [out] new text for item
	cchText As Long ' [in] size of buffer pointed to by pszText
End Type

Public Type NMTOOLBAR
	hdr As NMHDR
	iItem As Long
	tbButton As TBBUTTON
	cchText As Long
	pszText As LongPtr
End Type

'The notifications for the following are documented, and these structures appear on MSDN, but not in commctrl.h
Public Type NMTBDUPACCELERATOR
	hdr As NMHDR
	ch As Long
	fDup As Long
End Type

Public Type NMTBWRAPACCELERATOR
	hdr As NMHDR
	ch As Long
	iButton As Long
End Type
Public Type NMTBWRAPHOTITEM
	hdr As NMHDR
	iStart As Long
	iDir As Long
	nReason As Toolbar_HotItemFlags ' HICF_* flags
End Type

Public Type NMTBCUSTOMIZEDLG
	hdr As NMHDR
	hDlg As LongPtr
End Type

Public Declare PtrSafe Function CreateToolbarEx Lib "comctl32" (ByVal hWnd As LongPtr, ByVal ws As Long, ByVal wid As Long, ByVal nBitmaps As Long, ByVal hbmInst As LongPtr, ByVal wBMID As LongPtr, _
        ByRef lpButtons As TBBUTTON, ByVal iNumButtons As Long, ByVal dxButton As Long, ByVal dyButton As Long, ByVal dxBitmap As Long, ByVal dyBitmap As Long, ByVal uStructSize As Long) As LongPtr
        
Public Declare PtrSafe Function CreateMappedBitmap Lib "comctl32" (ByVal hInstance As LongPtr, ByVal idBitmap As LongPtr, ByVal wFlags As CreateMappedBitmapFlags, lpColorMap As COLORMAP, ByVal iNumMaps As Long) As LongPtr
End Module