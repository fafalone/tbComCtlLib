'Common Dialog defs

#If TB_SHELLLIB_DEFINED = 0 Then
[ InterfaceId ("5852A2C3-6530-11D1-B6A3-0000F8757BF9") ]
[ OleAutomation (False) ]
Interface IPrintDialogCallback Extends stdole.IUnknown
    Sub InitDone()
    Sub SelectionChanged()
    Sub HandleMessage(ByVal hDlg As LongPtr, ByVal uMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr, plResult As LongPtr)
End Interface
[ InterfaceId ("509AAEDA-5639-11D1-B6A1-0000F8757BF9") ]
[ OleAutomation (False) ]
Interface IPrintDialogServices Extends stdole.IUnknown
    Sub GetCurrentDevMode(pDevMode As DEVMODEW, pcbSize As Long)
    Sub GetCurrentPrinterName(pPrinterName As LongPtr, pcchSize As Long)
    Sub GetCurrentPortName(pPortName As LongPtr, pcchSize As Long)
End Interface
#End If
Module modComDlg

#If TB_SHELLLIB_DEFINED = 0 Then
Public Type DEVMODEW
	dmDeviceName(0 To 31) As Integer
	dmSpecVersion As Integer
	dmDriverVersion As Integer
	dmSize As Integer
	dmDriverExtra As Integer
	dmFields As Long
	PrinterOrDisplayFields(0 To 15) As Byte
	dmColor As Integer
	dmDuplex As Integer
	dmYResolution As Integer
	dmTTOption As Integer
	dmCollate As Integer
	dmFormName(0 To 31) As Integer
	dmLogPixels As Integer
	dmBitsPerPel As Long
	dmPelsWidth As Long
	dmPelsHeight As Long
	DisplayFlagsOrNup As Long
	dmDisplayFrequency As Long
	'#if(WINVER >= 0x0400)
	dmICMMethod As Long
	dmICMIntent As Long
	dmMediaType As Long
	dmDitherType As Long
	dmReserved1 As Long
	dmReserved2 As Long
	'#if (WINVER >= 0x0500) || (_WIN32_WINNT >= _WIN32_WINNT_NT4)
	dmPanningWidth As Long
	dmPanningHeight As Long
	'#endif
	'#endif /* WINVER >= 0x0400 */
End Type
#End If

Public Type OPENFILENAMEA
	lStructSize As Long
	hwndOwner As LongPtr
	hInstance As LongPtr
	lpstrFilter As String
	lpstrCustomFilter As String
	nMaxCustFilter As Long
	nFilterIndex As Long
	lpstrFile As String
	nMaxFile As Long
	lpstrFileTitle As String
	nMaxFileTitle As Long
	lpstrInitialDir As String
	lpstrTitle As String
	Flags As OFNFlags
	nFileOffset As Integer
	nFileExtension As Integer
	lpstrDefExt As Long
	lCustData As LongPtr
	lpfnHook As LongPtr
	lpTemplateName As String
	pvReserved As LongPtr
	dwReserved As Long
	FlagsEx As OFNFlagsEx
End Type
Public Type OPENFILENAMEW
	lStructSize As Long
	hwndOwner As LongPtr
	hInstance As LongPtr
	lpstrFilter As LongPtr
	lpstrCustomFilter As LongPtr
	nMaxCustFilter As Long
	nFilterIndex As Long
	lpstrFile As LongPtr
	nMaxFile As Long
	lpstrFileTitle As LongPtr
	nMaxFileTitle As Long
	lpstrInitialDir As LongPtr
	lpstrTitle As LongPtr
	Flags As OFNFlags
	nFileOffset As Integer
	nFileExtension As Integer
	lpstrDefExt As Long
	lCustData As LongPtr
	lpfnHook As LongPtr
	lpTemplateName As Long
	pvReserved As LongPtr
	dwReserved As Long
	FlagsEx As OFNFlagsEx
End Type
Public Type OPENFILENAME
	lStructSize As Long
	hwndOwner As LongPtr
	hInstance As LongPtr
	lpstrFilter As LongPtr
	lpstrCustomFilter As LongPtr
	nMaxCustFilter As Long
	nFilterIndex As Long
	lpstrFile As LongPtr
	nMaxFile As Long
	lpstrFileTitle As LongPtr
	nMaxFileTitle As Long
	lpstrInitialDir As LongPtr
	lpstrTitle As LongPtr
	Flags As OFNFlags
	nFileOffset As Integer
	nFileExtension As Integer
	lpstrDefExt As Long
	lCustData As LongPtr
	lpfnHook As LongPtr
	lpTemplateName As Long
	pvReserved As LongPtr
	dwReserved As Long
	FlagsEx As OFNFlagsEx
End Type

Public Enum OFNFlags
	OFN_READONLY = &H00000001
	OFN_OVERWRITEPROMPT = &H00000002
	OFN_HIDEREADONLY = &H00000004
	OFN_NOCHANGEDIR = &H00000008
	OFN_SHOWHELP = &H00000010
	OFN_ENABLEHOOK = &H00000020
	OFN_ENABLETEMPLATE = &H00000040
	OFN_ENABLETEMPLATEHANDLE = &H00000080
	OFN_NOVALIDATE = &H00000100
	OFN_ALLOWMULTISELECT = &H00000200
	OFN_EXTENSIONDIFFERENT = &H00000400
	OFN_PATHMUSTEXIST = &H00000800
	OFN_FILEMUSTEXIST = &H00001000
	OFN_CREATEPROMPT = &H00002000
	OFN_SHAREAWARE = &H00004000
	OFN_NOREADONLYRETURN = &H00008000&
	OFN_NOTESTFILECREATE = &H00010000
	OFN_NONETWORKBUTTON = &H00020000
	OFN_NOLONGNAMES = &H00040000  ' force no long names for 4.x modules
	OFN_EXPLORER = &H00080000  ' new look commdlg
	OFN_NODEREFERENCELINKS = &H00100000
	OFN_LONGNAMES = &H00200000  ' force long names for 3.x modules
'  OFN_ENABLEINCLUDENOTIFY and OFN_ENABLESIZING require
'  Windows 2000 or higher to have any effect.
	OFN_ENABLEINCLUDENOTIFY = &H00400000  ' send include message to callback
	OFN_ENABLESIZING = &H00800000
	OFN_DONTADDTORECENT = &H02000000
	OFN_FORCESHOWHIDDEN = &H10000000  ' Show All files including System and hidden files
End Enum
Public Enum OFNFlagsEx
	OFN_EX_NOPLACESBAR = &H1
End Enum

Public Declare PtrSafe Function GetOpenFileNameA Lib "comdlg32" (pOFN As OPENFILENAMEA) As Long
Public Declare PtrSafe Function GetOpenFileNameW Lib "comdlg32" (pOFN As OPENFILENAMEW) As Long
Public Declare PtrSafe Function GetOpenFileName Lib "comdlg32" Alias "GetOpenFileNameW" (pOFN As OPENFILENAME) As Long

Public Declare PtrSafe Function GetSaveFileNameA Lib "comdlg32" (pOFN As OPENFILENAMEA) As Long
Public Declare PtrSafe Function GetSaveFileNameW Lib "comdlg32" (pOFN As OPENFILENAMEW) As Long
Public Declare PtrSafe Function GetSaveFileName Lib "comdlg32" Alias "GetSaveFileNameW" (pOFN As OPENFILENAME) As Long

Public Declare PtrSafe Function GetFileTitleA Lib "comdlg32" (Buf As String, ByVal cchSize As Long) As Integer
Public Declare PtrSafe Function GetFileTitleW Lib "comdlg32" (Buf As LongPtr, ByVal cchSize As Long) As Integer
Public DeclareWide PtrSafe Function GetFileTitle Lib "comdlg32" Alias "GetFileTitleW" (Buf As String, ByVal cchSize As Long) As Integer

Public Const OFN_SHAREFALLTHROUGH  = 2
Public Const OFN_SHARENOWARN  = 1
Public Const OFN_SHAREWARN  = 0

Public Type OFNOTIFYA
	hdr As NMHDR
	lpOFN As LongPtr
	pszFile As String ' May be NULL
End Type
Public Type OFNOTIFYW
	hdr As NMHDR
	lpOFN As LongPtr
	pszFile As LongPtr ' May be NULL
End Type
Public Type OFNOTIFY
	hdr As NMHDR
	lpOFN As LongPtr
	pszFile As LongPtr ' May be NULL
End Type

Public Type OFNOTIFYEXA
	hdr As NMHDR
	lpOFN As LongPtr
	psf As LongPtr
	pidl As LongPtr ' May be NULL
End Type
Public Type OFNOTIFYEXW
	hdr As NMHDR
	lpOFN As LongPtr
	psf As LongPtr
	pidl As LongPtr ' May be NULL
End Type
Public Type OFNOTIFYEX
	hdr As NMHDR
	lpOFN As LongPtr
	psf As LongPtr
	pidl As LongPtr ' May be NULL
End Type

Public Const CDN_FIRST  = (-601)
Public Const CDN_LAST  = (-699)
'  Notifications from Open or Save dialog
Public Const CDN_INITDONE  = (CDN_FIRST - &H0000)
Public Const CDN_SELCHANGE  = (CDN_FIRST - &H0001)
Public Const CDN_FOLDERCHANGE  = (CDN_FIRST - &H0002)
Public Const CDN_SHAREVIOLATION  = (CDN_FIRST - &H0003)
Public Const CDN_HELP  = (CDN_FIRST - &H0004)
Public Const CDN_FILEOK  = (CDN_FIRST - &H0005)
Public Const CDN_TYPECHANGE  = (CDN_FIRST - &H0006)
Public Const CDN_INCLUDEITEM  = (CDN_FIRST - &H0007)

Public Const CDM_FIRST  = (WM_USER + 100)
Public Const CDM_LAST  = (WM_USER + 200)
Public Const CDM_GETSPEC = (CDM_FIRST + &H0000)
Public Const CDM_GETFILEPATH  = (CDM_FIRST + &H0001)
Public Const CDM_GETFOLDERPATH  = (CDM_FIRST + &H0002)
Public Const CDM_GETFOLDERIDLIST  = (CDM_FIRST + &H0003)
Public Const CDM_SETCONTROLTEXT  = (CDM_FIRST + &H0004)
Public Const CDM_HIDECONTROL  = (CDM_FIRST + &H0005)
Public Const CDM_SETDEFEXT  = (CDM_FIRST + &H0006)

Public Type CHOOSECOLORA
	lStructSize As Long
	hwndOwner As LongPtr
	hInstance As LongPtr
	rgbResult As Long
	lpCustColors As LongPtr
	Flags As ChooseColorFlags
	lCustData As LongPtr
	lpfnHook As LongPtr
	lpTemplateName As String
End Type
Public Type CHOOSECOLORW
	lStructSize As Long
	hwndOwner As LongPtr
	hInstance As LongPtr
	rgbResult As Long
	lpCustColors As LongPtr
	Flags As ChooseColorFlags
	lCustData As LongPtr
	lpfnHook As LongPtr
	lpTemplateName As LongPtr
End Type
Public Type CHOOSECOLOR
	lStructSize As Long
	hwndOwner As LongPtr
	hInstance As LongPtr
	rgbResult As Long
	lpCustColors As LongPtr
	Flags As ChooseColorFlags
	lCustData As LongPtr
	lpfnHook As LongPtr
	lpTemplateName As LongPtr
End Type

Public Enum ChooseColorFlags
	CC_RGBINIT = &H00000001
	CC_FULLOPEN = &H00000002
	CC_PREVENTFULLOPEN = &H00000004
	CC_SHOWHELP = &H00000008
	CC_ENABLEHOOK = &H00000010
	CC_ENABLETEMPLATE = &H00000020
	CC_ENABLETEMPLATEHANDLE = &H00000040
	CC_SOLIDCOLOR = &H00000080
	CC_ANYCOLOR = &H00000100
End Enum

Public Declare PtrSafe Function ChooseColorA Lib "comdlg32" (lpCC As CHOOSECOLORA) As Long
Public Declare PtrSafe Function ChooseColorW Lib "comdlg32" (lpCC As CHOOSECOLORW) As Long
Public DeclareWide PtrSafe Function ChooseColor Lib "comdlg32" Alias "ChooseColorW" (lpCC As CHOOSECOLOR) As Long

Public Type FINDREPLACEA
	lStructSize As Long ' size of this struct 0x20
	hwndOwner As LongPtr ' handle to owner's window
	hInstance As LongPtr ' instance handle of.EXE that
	'   contains cust. dlg. template
	Flags As FindReplaceFlags ' one or more of the FR_??
	lpstrFindWhat As String ' ptr. to search string
	lpstrReplaceWith As String ' ptr. to replace string
	wFindWhatLen As Integer ' size of find buffer
	wReplaceWithLen As Integer ' size of replace buffer
	lCustData As LongPtr ' data passed to hook fn.
	lpfnHook As LongPtr ' ptr. to hook fn. or NULL
	lpTemplateName As String ' custom template name
End Type
Public Type FINDREPLACEW
	lStructSize As Long ' size of this struct 0x20
	hwndOwner As LongPtr ' handle to owner's window
	hInstance As LongPtr ' instance handle of.EXE that
	'   contains cust. dlg. template
	Flags As FindReplaceFlags ' one or more of the FR_??
	lpstrFindWhat As LongPtr ' ptr. to search string
	lpstrReplaceWith As LongPtr ' ptr. to replace string
	wFindWhatLen As Integer ' size of find buffer
	wReplaceWithLen As Integer ' size of replace buffer
	lCustData As LongPtr ' data passed to hook fn.
	lpfnHook As LongPtr ' ptr. to hook fn. or NULL
	lpTemplateName As LongPtr ' custom template name
End Type
Public Type FINDREPLACE
	lStructSize As Long ' size of this struct 0x20
	hwndOwner As LongPtr ' handle to owner's window
	hInstance As LongPtr ' instance handle of.EXE that
	'   contains cust. dlg. template
	Flags As FindReplaceFlags ' one or more of the FR_??
	lpstrFindWhat As LongPtr ' ptr. to search string
	lpstrReplaceWith As LongPtr ' ptr. to replace string
	wFindWhatLen As Integer ' size of find buffer
	wReplaceWithLen As Integer ' size of replace buffer
	lCustData As LongPtr ' data passed to hook fn.
	lpfnHook As LongPtr ' ptr. to hook fn. or NULL
	lpTemplateName As LongPtr ' custom template name
End Type

Public Enum FindReplaceFlags
	FR_DOWN = &H00000001
	FR_WHOLEWORD = &H00000002
	FR_MATCHCASE = &H00000004
	FR_FINDNEXT = &H00000008
	FR_REPLACE = &H00000010
	FR_REPLACEALL = &H00000020
	FR_DIALOGTERM = &H00000040
	FR_SHOWHELP = &H00000080
	FR_ENABLEHOOK = &H00000100
	FR_ENABLETEMPLATE = &H00000200
	FR_NOUPDOWN = &H00000400
	FR_NOMATCHCASE = &H00000800
	FR_NOWHOLEWORD = &H00001000
	FR_ENABLETEMPLATEHANDLE = &H00002000
	FR_HIDEUPDOWN = &H00004000
	FR_HIDEMATCHCASE = &H00008000&
	FR_HIDEWHOLEWORD = &H00010000
	FR_RAW = &H00020000
	FR_MATCHDIAC = &H20000000
	FR_MATCHKASHIDA = &H40000000
	FR_MATCHALEFHAMZA = &H80000000
End Enum

Public Const FRM_FIRST  = (WM_USER + 100)
Public Const FRM_LAST  = (WM_USER + 200)
Public Const FRM_SETOPERATIONRESULT  = (FRM_FIRST + &H0000)
Public Const FRM_SETOPERATIONRESULTTEXT  = (FRM_FIRST + &H0001)

Public Declare PtrSafe Function FindTextA Lib "comdlg32" (lpFR As FINDREPLACEA) As LongPtr
Public Declare PtrSafe Function FindTextW Lib "comdlg32" (lpFR As FINDREPLACEW) As LongPtr
Public DeclareWide PtrSafe Function FindText Lib "comdlg32" (lpFR As FINDREPLACE) As LongPtr

Public Declare PtrSafe Function ReplaceTextA Lib "comdlg32" (lpFR As FINDREPLACEA) As LongPtr
Public Declare PtrSafe Function ReplaceTextW Lib "comdlg32" (lpFR As FINDREPLACEW) As LongPtr
Public DeclareWide PtrSafe Function ReplaceText Lib "comdlg32" (lpFR As FINDREPLACE) As LongPtr

Public Type CHOOSEFONTA
	lStructSize As Long
	hwndOwner As LongPtr ' caller's window handle
	hDC As LongPtr ' printer DC/IC or NULL
	lpLogFont As LongPtr ' ptr. to a LOGFONT struct
	iPointSize As Long ' 10 * size in points of selected font
	Flags As ChooseFontFlags ' enum. type flags
	rgbColors As Long ' returned text color
	lCustData As LongPtr ' data passed to hook fn.
	lpfnHook As LongPtr ' ptr. to hook function
	lpTemplateName As String ' custom template name
	hInstance As LongPtr ' instance handle of.EXE that
	'   contains cust. dlg. template
	lpszStyle As String ' return the style field here
	' must be LF_FACESIZE or bigger
	nFontType As Integer ' same value reported to the EnumFonts
	'   call back with the extra FONTTYPE_
	'   bits added
	___MISSING_ALIGNMENT__ As Integer
	nSizeMin As Long ' minimum pt size allowed &
	nSizeMax As Long ' max pt size allowed if
	'   CF_LIMITSIZE is used
End Type
Public Type CHOOSEFONTW
	lStructSize As Long
	hwndOwner As LongPtr ' caller's window handle
	hDC As LongPtr ' printer DC/IC or NULL
	lpLogFont As LongPtr ' ptr. to a LOGFONT struct
	iPointSize As Long ' 10 * size in points of selected font
	Flags As ChooseFontFlags ' enum. type flags
	rgbColors As Long ' returned text color
	lCustData As LongPtr ' data passed to hook fn.
	lpfnHook As LongPtr ' ptr. to hook function
	lpTemplateName As LongPtr ' custom template name
	hInstance As LongPtr ' instance handle of.EXE that
	'   contains cust. dlg. template
	lpszStyle As LongPtr ' return the style field here
	' must be LF_FACESIZE or bigger
	nFontType As Integer ' same value reported to the EnumFonts
	'   call back with the extra FONTTYPE_
	'   bits added
	MISSING_ALIGNMENT As Integer
	nSizeMin As Long ' minimum pt size allowed &
	nSizeMax As Long ' max pt size allowed if
	'   CF_LIMITSIZE is used
End Type
Public Type CHOOSEFONT
	lStructSize As Long
	hwndOwner As LongPtr ' caller's window handle
	hDC As LongPtr ' printer DC/IC or NULL
	lpLogFont As LongPtr ' ptr. to a LOGFONT struct
	iPointSize As Long ' 10 * size in points of selected font
	Flags As ChooseFontFlags ' enum. type flags
	rgbColors As Long ' returned text color
	lCustData As LongPtr ' data passed to hook fn.
	lpfnHook As LongPtr ' ptr. to hook function
	lpTemplateName As LongPtr ' custom template name
	hInstance As LongPtr ' instance handle of.EXE that
	'   contains cust. dlg. template
	lpszStyle As LongPtr ' return the style field here
	' must be LF_FACESIZE or bigger
	nFontType As Integer ' same value reported to the EnumFonts
	'   call back with the extra FONTTYPE_
	'   bits added
	___MISSING_ALIGNMENT__ As Integer
	nSizeMin As Long ' minimum pt size allowed &
	nSizeMax As Long ' max pt size allowed if
	'   CF_LIMITSIZE is used
End Type

Public Enum ChooseFontFlags
	CF_SCREENFONTS = &H00000001
	CF_PRINTERFONTS = &H00000002
	CF_BOTH = (CF_SCREENFONTS Or CF_PRINTERFONTS)
	CF_SHOWHELP = &H00000004
	CF_ENABLEHOOK = &H00000008
	CF_ENABLETEMPLATE = &H00000010
	CF_ENABLETEMPLATEHANDLE = &H00000020
	CF_INITTOLOGFONTSTRUCT = &H00000040
	CF_USESTYLE = &H00000080
	CF_EFFECTS = &H00000100
	CF_APPLY = &H00000200
	CF_ANSIONLY = &H00000400

	CF_SCRIPTSONLY = CF_ANSIONLY

	CF_NOVECTORFONTS = &H00000800
	CF_NOOEMFONTS = CF_NOVECTORFONTS
	CF_NOSIMULATIONS = &H00001000
	CF_LIMITSIZE = &H00002000
	CF_FIXEDPITCHONLY = &H00004000
	CF_WYSIWYG = &H00008000&  ' must also have CF_SCREENFONTS & CF_PRINTERFONTS
	CF_FORCEFONTEXIST = &H00010000
	CF_SCALABLEONLY = &H00020000
	CF_TTONLY = &H00040000
	CF_NOFACESEL = &H00080000
	CF_NOSTYLESEL = &H00100000
	CF_NOSIZESEL = &H00200000

	CF_SELECTSCRIPT = &H00400000
	CF_NOSCRIPTSEL = &H00800000
	CF_NOVERTFONTS = &H01000000

	CF_INACTIVEFONTS = &H02000000
End Enum

Public Declare PtrSafe Function ChooseFontA Lib "comdlg32" (lpCF As CHOOSEFONTA) As Long
Public Declare PtrSafe Function ChooseFontW Lib "comdlg32" (lpCF As CHOOSEFONTW) As Long
Public DeclareWide PtrSafe Function ChooseFont Lib "comdlg32" Alias "ChooseFontW" (lpCF As CHOOSEFONT) As Long

Public Const SIMULATED_FONTTYPE  = &H8000
Public Const PRINTER_FONTTYPE  = &H4000
Public Const SCREEN_FONTTYPE  = &H2000
Public Const BOLD_FONTTYPE  = &H0100
Public Const ITALIC_FONTTYPE  = &H0200
Public Const REGULAR_FONTTYPE  = &H0400
Public Const RASTER_FONTTYPE  = &H001
Public Const DEVICE_FONTTYPE  = &H002
Public Const TRUETYPE_FONTTYPE  = &H004
Public Const PS_OPENTYPE_FONTTYPE  = &H10000
Public Const TT_OPENTYPE_FONTTYPE  = &H20000
Public Const TYPE1_FONTTYPE  = &H40000
Public Const SYMBOL_FONTTYPE  = &H80000
Public Const WM_CHOOSEFONT_GETLOGFONT  = (WM_USER + 1)
Public Const WM_CHOOSEFONT_SETLOGFONT  = (WM_USER + 101)
Public Const WM_CHOOSEFONT_SETFLAGS  = (WM_USER + 102)
Public Const LBSELCHSTRINGA  = "commdlg_LBSelChangedNotify"
Public Const SHAREVISTRINGA  = "commdlg_ShareViolation"
Public Const FILEOKSTRINGA  = "commdlg_FileNameOK"
Public Const COLOROKSTRINGA  = "commdlg_ColorOK"
Public Const SETRGBSTRINGA  = "commdlg_SetRGBColor"
Public Const HELPMSGSTRINGA  = "commdlg_help"
Public Const FINDMSGSTRINGA  = "commdlg_FindReplace"
Public Const LBSELCHSTRINGW  = "commdlg_LBSelChangedNotify"
Public Const SHAREVISTRINGW  = "commdlg_ShareViolation"
Public Const FILEOKSTRINGW  = "commdlg_FileNameOK"
Public Const COLOROKSTRINGW  = "commdlg_ColorOK"
Public Const SETRGBSTRINGW  = "commdlg_SetRGBColor"
Public Const HELPMSGSTRINGW  = "commdlg_help"
Public Const FINDMSGSTRINGW  = "commdlg_FindReplace"

Public Const LBSELCHSTRING  = LBSELCHSTRINGW
Public Const SHAREVISTRING  = SHAREVISTRINGW
Public Const FILEOKSTRING  = FILEOKSTRINGW
Public Const COLOROKSTRING  = COLOROKSTRINGW
Public Const SETRGBSTRING  = SETRGBSTRINGW
Public Const HELPMSGSTRING  = HELPMSGSTRINGW
Public Const FINDMSGSTRING  = FINDMSGSTRINGW

Public Const CD_LBSELNOITEMS  = -1
Public Const CD_LBSELCHANGE  = 0
Public Const CD_LBSELSUB  = 1
Public Const CD_LBSELADD  = 2

#If Win64 = 0 Then
[ PackingAlignment (1) ] 'This technically applies to all UDTs but hasn't mattered so far
#End If
Public Type PRINTDLGA
	lStructSize As Long
	hwndOwner As LongPtr
	hDevMode As LongPtr
	hDevNames As LongPtr
	hDC As LongPtr
	Flags As PrintDialogFlags
	nFromPage As Integer
	nToPage As Integer
	nMinPage As Integer
	nMaxPage As Integer
	nCopies As Integer
	hInstance As LongPtr
	lCustData As LongPtr
	lpfnPrintHook As LongPtr
	lpfnSetupHook As LongPtr
	lpPrintTemplateName As LongPtr
	lpSetupTemplateName As LongPtr
	hPrintTemplate As LongPtr
	hSetupTemplate As LongPtr
End Type
#If Win64 = 0 Then
[ PackingAlignment (1) ] 'This technically applies to all UDTs in comdlg.h but hasn't mattered so far
#End If
Public Type PRINTDLGW
	lStructSize As Long
	hwndOwner As LongPtr
	hDevMode As LongPtr
	hDevNames As LongPtr
	hDC As LongPtr
	Flags As PrintDialogFlags
	nFromPage As Integer
	nToPage As Integer
	nMinPage As Integer
	nMaxPage As Integer
	nCopies As Integer
	hInstance As LongPtr
	lCustData As LongPtr
	lpfnPrintHook As LongPtr
	lpfnSetupHook As LongPtr
	lpPrintTemplateName As LongPtr
	lpSetupTemplateName As LongPtr
	hPrintTemplate As LongPtr
	hSetupTemplate As LongPtr
End Type
#If Win64 = 0 Then
[ PackingAlignment (1) ] 'This technically applies to all UDTs but hasn't mattered so far
#End If
Public Type PRINTDLG
	lStructSize As Long
	hwndOwner As LongPtr
	hDevMode As LongPtr
	hDevNames As LongPtr
	hDC As LongPtr
	Flags As PrintDialogFlags
	nFromPage As Integer
	nToPage As Integer
	nMinPage As Integer
	nMaxPage As Integer
	nCopies As Integer
	hInstance As LongPtr
	lCustData As LongPtr
	lpfnPrintHook As LongPtr
	lpfnSetupHook As LongPtr
	lpPrintTemplateName As LongPtr
	lpSetupTemplateName As LongPtr
	hPrintTemplate As LongPtr
	hSetupTemplate As LongPtr
End Type

Public Enum PrintDialogFlags
	PD_ALLPAGES = &H00000000
	PD_SELECTION = &H00000001
	PD_PAGENUMS = &H00000002
	PD_NOSELECTION = &H00000004
	PD_NOPAGENUMS = &H00000008
	PD_COLLATE = &H00000010
	PD_PRINTTOFILE = &H00000020
	PD_PRINTSETUP = &H00000040
	PD_NOWARNING = &H00000080
	PD_RETURNDC = &H00000100
	PD_RETURNIC = &H00000200
	PD_RETURNDEFAULT = &H00000400
	PD_SHOWHELP = &H00000800
	PD_ENABLEPRINTHOOK = &H00001000
	PD_ENABLESETUPHOOK = &H00002000
	PD_ENABLEPRINTTEMPLATE = &H00004000
	PD_ENABLESETUPTEMPLATE = &H00008000&
	PD_ENABLEPRINTTEMPLATEHANDLE = &H00010000
	PD_ENABLESETUPTEMPLATEHANDLE = &H00020000
	PD_USEDEVMODECOPIES = &H00040000
	PD_USEDEVMODECOPIESANDCOLLATE = &H00040000
	PD_DISABLEPRINTTOFILE = &H00080000
	PD_HIDEPRINTTOFILE = &H00100000
	PD_NONETWORKBUTTON = &H00200000

	PD_CURRENTPAGE = &H00400000
	PD_NOCURRENTPAGE = &H00800000
	PD_EXCLUSIONFLAGS = &H01000000
	PD_USELARGETEMPLATE = &H10000000
End Enum

Public Declare PtrSafe Function PrintDlgA Lib "comdlg32" (lpPD As PRINTDLGA) As Long
Public Declare PtrSafe Function PrintDlgW Lib "comdlg32" (lpPD As PRINTDLGW) As Long
Public DeclareWide PtrSafe Function PrintDlg Lib "comdlg32" Alias "PrintDlgW" (lpPD As PRINTDLG) As Long

Public Type PRINTPAGERANGE
	nFromPage As Long
	nToPage As Long
End Type

Public Enum PrintDialogExclusionFlags
    PD_EXCL_COPIESANDCOLLATE = &H8100&
End Enum

Public Enum PrintDialogResultActions
	PD_RESULT_CANCEL = 0
	PD_RESULT_PRINT = 1
	PD_RESULT_APPLY = 2
End Enum

Public Type PRINTDLGEXA
	lStructSize As Long ' size of structure in bytes
	hwndOwner As LongPtr ' caller's window handle
	hDevMode As LongPtr ' handle to DevMode
	hDevNames As LongPtr ' handle to DevNames
	hDC As LongPtr ' printer DC/IC or NULL
	Flags As PrintDialogFlags ' PD_ flags
	Flags2 As Long ' reserved
	ExclusionFlags As PrintDialogExclusionFlags ' items to exclude from driver pages
	nPageRanges As Long ' number of page ranges
	nMaxPageRanges As Long ' max number of page ranges
	lpPageRanges As LongPtr ' array of page ranges
	nMinPage As Long ' min page number
	nMaxPage As Long ' max page number
	nCopies As Long ' number of copies
	hInstance As LongPtr ' instance handle
	lpPrintTemplateName As String ' template name for app specific area
	lpCallback As LongPtr ' app callback interface
	nPropertyPages As Long ' number of app property pages in lphPropertyPages
	lphPropertyPages As LongPtr ' array of app property page handles
	nStartPage As Long ' start page id
	dwResultAction As PrintDialogResultActions ' result action if S_OK is returned
End Type
Public Type PRINTDLGEXW
	lStructSize As Long ' size of structure in bytes
	hwndOwner As LongPtr ' caller's window handle
	hDevMode As LongPtr ' handle to DevMode
	hDevNames As LongPtr ' handle to DevNames
	hDC As LongPtr ' printer DC/IC or NULL
	Flags As PrintDialogFlags ' PD_ flags
	Flags2 As Long ' reserved
	ExclusionFlags As PrintDialogExclusionFlags ' items to exclude from driver pages
	nPageRanges As Long ' number of page ranges
	nMaxPageRanges As Long ' max number of page ranges
	lpPageRanges As LongPtr ' array of page ranges
	nMinPage As Long ' min page number
	nMaxPage As Long ' max page number
	nCopies As Long ' number of copies
	hInstance As LongPtr ' instance handle
	lpPrintTemplateName As LongPtr ' template name for app specific area
	lpCallback As LongPtr ' app callback interface
	nPropertyPages As Long ' number of app property pages in lphPropertyPages
	lphPropertyPages As LongPtr ' array of app property page handles
	nStartPage As Long ' start page id
	dwResultAction As PrintDialogResultActions ' result action if S_OK is returned
End Type
Public Type PRINTDLGEX
	lStructSize As Long ' size of structure in bytes
	hwndOwner As LongPtr ' caller's window handle
	hDevMode As LongPtr ' handle to DevMode
	hDevNames As LongPtr ' handle to DevNames
	hDC As LongPtr ' printer DC/IC or NULL
	Flags As PrintDialogFlags ' PD_ flags
	Flags2 As Long ' reserved
	ExclusionFlags As PrintDialogExclusionFlags ' items to exclude from driver pages
	nPageRanges As Long ' number of page ranges
	nMaxPageRanges As Long ' max number of page ranges
	lpPageRanges As LongPtr ' array of page ranges
	nMinPage As Long ' min page number
	nMaxPage As Long ' max page number
	nCopies As Long ' number of copies
	hInstance As LongPtr ' instance handle
	lpPrintTemplateName As LongPtr ' template name for app specific area
	lpCallback As LongPtr ' app callback interface
	nPropertyPages As Long ' number of app property pages in lphPropertyPages
	lphPropertyPages As LongPtr ' array of app property page handles
	nStartPage As Long ' start page id
	dwResultAction As PrintDialogResultActions ' result action if S_OK is returned
End Type

Public Const START_PAGE_GENERAL = &Hffffffff

Public Declare PtrSafe Function PrintDlgExA Lib "comdlg32" (pPD As PRINTDLGEXA) As Long
Public Declare PtrSafe Function PrintDlgExW Lib "comdlg32" (pPD As PRINTDLGEXW) As Long
Public DeclareWide PtrSafe Function PrintDlgEx Lib "comdlg32" Alias "PrintDlgExW" (pPD As PRINTDLGEX) As Long

Public Type DEVNAMES
	wDriverOffset As Integer
	wDeviceOffset As Integer
	wOutputOffset As Integer
	wDefault As Integer
End Type

Public Const DN_DEFAULTPRN  = &H0001

Public Declare PtrSafe Function CommDlgExtendedError Lib "comdlg32" () As Long

Public Const WM_PSD_PAGESETUPDLG  = (WM_USER)
Public Const WM_PSD_FULLPAGERECT  = (WM_USER + 1)
Public Const WM_PSD_MINMARGINRECT  = (WM_USER + 2)
Public Const WM_PSD_MARGINRECT  = (WM_USER + 3)
Public Const WM_PSD_GREEKTEXTRECT  = (WM_USER + 4)
Public Const WM_PSD_ENVSTAMPRECT  = (WM_USER + 5)
Public Const WM_PSD_YAFULLPAGERECT  = (WM_USER + 6)

Public Type PAGESETUPDLGA
	lStructSize As Long
	hwndOwner As LongPtr
	hDevMode As LongPtr
	hDevNames As LongPtr
	Flags As PageSetupDialogFlags
	ptPaperSize As POINT
	rtMinMargin As RECT
	rtMargin As RECT
	hInstance As LongPtr
	lCustData As LongPtr
	lpfnPageSetupHook As LongPtr
	lpfnPagePaintHook As LongPtr
	lpPageSetupTemplateName As String
	hPageSetupTemplate As LongPtr
End Type
Public Type PAGESETUPDLGW
	lStructSize As Long
	hwndOwner As LongPtr
	hDevMode As LongPtr
	hDevNames As LongPtr
	Flags As PageSetupDialogFlags
	ptPaperSize As POINT
	rtMinMargin As RECT
	rtMargin As RECT
	hInstance As LongPtr
	lCustData As LongPtr
	lpfnPageSetupHook As LongPtr
	lpfnPagePaintHook As LongPtr
	lpPageSetupTemplateName As LongPtr
	hPageSetupTemplate As LongPtr
End Type
Public Type PAGESETUPDLG
	lStructSize As Long
	hwndOwner As LongPtr
	hDevMode As LongPtr
	hDevNames As LongPtr
	Flags As PageSetupDialogFlags
	ptPaperSize As POINT
	rtMinMargin As RECT
	rtMargin As RECT
	hInstance As LongPtr
	lCustData As LongPtr
	lpfnPageSetupHook As LongPtr
	lpfnPagePaintHook As LongPtr
	lpPageSetupTemplateName As LongPtr
	hPageSetupTemplate As LongPtr
End Type

Public Enum PageSetupDialogFlags
	PSD_DEFAULTMINMARGINS = &H00000000  ' default (printer's)
	PSD_INWININIINTLMEASURE = &H00000000  ' 1st of 4 possible
	PSD_MINMARGINS = &H00000001  ' use caller's
	PSD_MARGINS = &H00000002  ' use caller's
	PSD_INTHOUSANDTHSOFINCHES = &H00000004  ' 2nd of 4 possible
	PSD_INHUNDREDTHSOFMILLIMETERS = &H00000008  ' 3rd of 4 possible
	PSD_DISABLEMARGINS = &H00000010
	PSD_DISABLEPRINTER = &H00000020
	PSD_NOWARNING = &H00000080  ' must be same as PD_*
	PSD_DISABLEORIENTATION = &H00000100
	PSD_RETURNDEFAULT = &H00000400  ' must be same as PD_*
	PSD_DISABLEPAPER = &H00000200
	PSD_SHOWHELP = &H00000800  ' must be same as PD_*
	PSD_ENABLEPAGESETUPHOOK = &H00002000  ' must be same as PD_*
	PSD_ENABLEPAGESETUPTEMPLATE = &H00008000&  ' must be same as PD_*
	PSD_ENABLEPAGESETUPTEMPLATEHANDLE = &H00020000  ' must be same as PD_*
	PSD_ENABLEPAGEPAINTHOOK = &H00040000
	PSD_DISABLEPAGEPAINTING = &H00080000
	PSD_NONETWORKBUTTON = &H00200000  ' must be same as PD_*
End Enum

Public Declare PtrSafe Function PageSetupDlgA Lib "comdlg32" (pPSD As PAGESETUPDLGA) As Long
Public Declare PtrSafe Function PageSetupDlgW Lib "comdlg32" (pPSD As PAGESETUPDLGW) As Long
Public DeclareWide PtrSafe Function PageSetupDlg Lib "comdlg32" Alias "PageSetupDlgW" (pPSD As PAGESETUPDLG) As Long


End Module