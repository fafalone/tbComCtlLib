Module modTaskDialog
#If CTASKDIALOG_DEFINED = 0 Then
Public Enum TDICONS
    TD_WARNING_ICON = -1 'exclamation point in a yellow 'yield' triangle (same image as IDI_EXCLAMATION)
    TD_ERROR_ICON = -2 'round red circle containg 'X' (same as IDI_HAND)
    TD_INFORMATION_ICON = -3 'round blue circle containing 'i' (same image as IDI_ASTERISK)
    TD_SHIELD_ICON = -4 'Vista's security shield
    IDI_APPLICATION = 32512&
    IDI_ERROR = 32513&
    'miniature picture of an application window
    IDI_QUESTION = 32514& 'round blue circle containing '?'
    IDI_WINLOGO = 32517&
    TD_SHIELD_GRADIENT_ICON = -5 'same image as TD_SHIELD_ICON; main message text on gradient blue background
    TD_SHIELD_WARNING_ICON = -6 'exclamation point in yellow Shield shape; main message text on gradient orange background
    TD_SHIELD_ERROR_ICON = -7 'X contained within Shield shape; main message text on gradient red background
    TD_SHIELD_OK_ICON = -8 'Shield shape containing green checkmark; main message text on gradient green background
    TD_SHIELD_GRAY_ICON = -9 'same image as TD_SHIELD_ICON; main message text on medium gray background
    TD_NO_ICON = 0 'no icon; text on white background
End Enum

'taskdialog common button flags
Public Enum TDBUTTONS
    TDCBF_OK_BUTTON = &H1&      'return value 1 (IDOK)
    TDCBF_YES_BUTTON = &H2&     'return value 6 (IDYES)
    TDCBF_NO_BUTTON = &H4&      'return value 7 (IDNO)
    TDCBF_CANCEL_BUTTON = &H8&  'return value 2 (IDCANCEL)
    TDCBF_RETRY_BUTTON = &H10&   'return value 4 (IDRETRY)
    TDCBF_CLOSE_BUTTON = &H20&   'return value 8 (IDCLOSE)
End Enum
Public Enum TDRESULT
    TD_OK = 1
    TD_YES = 6
    TD_NO = 7
    TD_CANCEL = 2
    TD_RETRY = 4
    TD_CLOSE = 8
End Enum
Public Enum TASKDIALOG_FLAGS
    TDF_ENABLE_HYPERLINKS = &H1
    TDF_USE_HICON_MAIN = &H2
    TDF_USE_HICON_FOOTER = &H4
    TDF_ALLOW_DIALOG_CANCELLATION = &H8
    TDF_USE_COMMAND_LINKS = &H10
    TDF_USE_COMMAND_LINKS_NO_ICON = &H20
    TDF_EXPAND_FOOTER_AREA = &H40
    TDF_EXPANDED_BY_DEFAULT = &H80
    TDF_VERIFICATION_FLAG_CHECKED = &H100
    TDF_SHOW_PROGRESS_BAR = &H200
    TDF_SHOW_MARQUEE_PROGRESS_BAR = &H400
    TDF_CALLBACK_TIMER = &H800
    TDF_POSITION_RELATIVE_TO_WINDOW = &H1000
    TDF_RTL_LAYOUT = &H2000
    TDF_NO_DEFAULT_RADIO_BUTTON = &H4000
    TDF_CAN_BE_MINIMIZED = &H8000&
    TDF_NO_SET_FOREGROUND = &H10000
    TDF_SIZE_TO_CONTENT = &H1000000
End Enum
'TDF_INPUT_BOX:
'Creates a textbox for input. There are multiple ways to set its position:
'1) Default, at the bottom of the content in the whitespace before the gray area
'2) To the left of the buttons. Not compatible with the expanded-info or verify-checkbox styles.
'3) As a footer. Aligned to retain the footer icon, but have an inputbox next to it.
'
'Additional inputbox items:
'-Initial text can be set, and current text from an open dialog, with .InputText
'-Cue banner can be set, .InputCueBanner
'-Input box can be set as a password input with * masks, .InputIsPassword


Public Enum TASKDIALOG_MESSAGES
    TDM_NAVIGATE_PAGE = WM_USER + 101&
    TDM_CLICK_BUTTON = WM_USER + 102&                  '// wParam = Button ID
    TDM_SET_MARQUEE_PROGRESS_BAR = WM_USER + 103&      '// wParam = 0 (nonMarque) wParam != 0 (Marquee)
    TDM_SET_PROGRESS_BAR_STATE = WM_USER + 104&        '// wParam = new progress state
    TDM_SET_PROGRESS_BAR_RANGE = WM_USER + 105&        '// lParam = tdMAKELPARAM(nMinRange& nMaxRange)
    TDM_SET_PROGRESS_BAR_POS = WM_USER + 106&          '// wParam = new position
    TDM_SET_PROGRESS_BAR_MARQUEE = WM_USER + 107&      '// wParam = 0 (stop marquee), wParam != 0 (start marquee), lparam = speed (milliseconds between repaints)
    TDM_SET_ELEMENT_TEXT = WM_USER + 108&              '// wParam = element (TASKDIALOG_ELEMENTS), lParam = new element text (LPCWSTR)
    TDM_CLICK_RADIO_BUTTON = WM_USER + 110&            '// wParam = Radio Button ID
    TDM_ENABLE_BUTTON = WM_USER + 111&                 '// lParam = 0 (disable), lParam != 0 (enable), wParam = Button ID
    TDM_ENABLE_RADIO_BUTTON = WM_USER + 112&           '// lParam = 0 (disable), lParam != 0 (enable), wParam = Radio Button ID
    TDM_CLICK_VERIFICATION = WM_USER + 113&            '// wParam = 0 (unchecked), 1 (checked), lParam = 1 (set key focus)
    TDM_UPDATE_ELEMENT_TEXT = WM_USER + 114&           '// wParam = element (TASKDIALOG_ELEMENTS), lParam = new element text (LPCWSTR)
    TDM_SET_BUTTON_ELEVATION_REQUIRED_STATE = WM_USER + 115& '// wParam = Button ID, lParam = 0 (elevation not required)& lParam != 0 (elevation required)
    TDM_UPDATE_ICON = WM_USER + 116&                   '// wParam = icon element (TASKDIALOG_ICON_ELEMENTS), lParam = new icon (hIcon if TDF_USE_HICON_* was set, PCWSTR otherwise)
End Enum 'TASKDIALOG_MESSAGES;

Public Enum TASKDIALOG_NOTIFICATIONS
    TDN_CREATED = 0
    TDN_NAVIGATED = 1
    TDN_BUTTON_CLICKED = 2           '// wParam = Button ID
    TDN_HYPERLINK_CLICKED = 3        '// lParam = (LPCWSTR)pszHREF
    TDN_TIMER = 4                    '// wParam = Milliseconds since dialog created or timer reset
    TDN_DESTROYED = 5
    TDN_RADIO_BUTTON_CLICKED = 6     '// wParam = Radio Button ID
    TDN_DIALOG_CONSTRUCTED = 7
    TDN_VERIFICATION_CLICKED = 8     '// wParam = 1 if checkbox checked, 0 if not, lParam is unused and always 0
    TDN_HELP = 9
    TDN_EXPANDO_BUTTON_CLICKED = 10  '// wParam = 0 (dialog is now collapsed), wParam != 0 (dialog is now expanded)
End Enum 'TASKDIALOG_NOTIFICATIONS;

Public Enum TASKDIALOG_ELEMENTS
    TDE_CONTENT = 0
    TDE_EXPANDED_INFORMATION = 1
    TDE_FOOTER = 2
    TDE_MAIN_INSTRUCTION = 3
End Enum

Public Enum TASKDIALOG_ICON_ELEMENTS
    TDIE_ICON_MAIN = 0
    TDIE_ICON_FOOTER = 1
End Enum

[ PackingAlignment (1) ]
Public Type TASKDIALOG_BUTTON
    nButtonID As Long
    pszButtonText As LongPtr
End Type

[ PackingAlignment (1) ]
Public Type TASKDIALOGCONFIG
    cbSize As Long
    hWndParent As LongPtr
    hInstance As LongPtr
    dwFlags As TASKDIALOG_FLAGS
    dwCommonButtons As TDBUTTONS
    pszWindowTitle As LongPtr
    pszMainIcon As LongPtr 'TDICONS
    pszMainInstruction As LongPtr
    pszContent As LongPtr
    cButtons As Long
    pButtons As LongPtr
    nDefaultButton As Long
    cRadioButtons As Long
    pRadioButtons As LongPtr
    nDefaultRadioButton As Long
    pszVerificationText As LongPtr
    pszExpandedInformation As LongPtr
    pszExpandedControlText As LongPtr
    pszCollapsedControlText As LongPtr
    pszFooterIcon As LongPtr 'TDICONS
    pszFooter As LongPtr
    pfCallback As LongPtr
    lpCallbackData As LongPtr
    CXWidth As Long
End Type

Public Declare PtrSafe Function TaskDialog Lib "comctl32.dll" _
                                                    (ByVal hWndParent As LongPtr, _
                                                     ByVal hInstance As LongPtr, _
                                                     ByVal pszWindowTitle As LongPtr, _
                                                     ByVal pszMainInstruction As LongPtr, _
                                                     ByVal pszContent As LongPtr, _
                                                     ByVal dwCommonButtons As Long, _
                                                     ByVal pszIcon As LongPtr, _
                                                     pnButton As Long) As Long
                                                     
Public Declare PtrSafe Function TaskDialogIndirect Lib "comctl32.dll" (pTaskConfig As TASKDIALOGCONFIG, _
                                                                pnButton As Long, _
                                                                pnRadioButton As Long, _
                                                                pfVerificationFlagChecked As Long) As Long
#End If

End Module